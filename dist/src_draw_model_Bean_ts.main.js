"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkweb_loading1"] = self["webpackChunkweb_loading1"] || []).push([["src_draw_model_Bean_ts"],{

/***/ "./src/draw/model/Bean.ts":
/*!********************************!*\
  !*** ./src/draw/model/Bean.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Bean)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ \"./src/utils.ts\");\n/* harmony import */ var _BaseModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseModel */ \"./src/draw/model/BaseModel.ts\");\n\r\n\r\nconst defaultOptions = {\r\n    ...(0,_utils__WEBPACK_IMPORTED_MODULE_0__.getDefOptions)(),\r\n    beanSize: 15,\r\n    pointLength: 15,\r\n};\r\nconst limits = [{\r\n        key: 'pointLength', message: 'pointLength value >= 5', limit: (key) => {\r\n            return key >= 5;\r\n        }\r\n    }, {\r\n        key: 'beanSize', message: 'beanSize value >= 5', limit: (key) => {\r\n            return key >= 5;\r\n        }\r\n    }];\r\nclass Bean extends _BaseModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\r\n    constructor(w, h, canvas, options, store) {\r\n        super(w, h, canvas, options, store);\r\n        this.initOptions(defaultOptions, limits);\r\n        this.bean = {\r\n            turn: 30,\r\n            state: 1,\r\n            beanState: 1,\r\n            nowX: -(this.options.pointLength * this.options.beanSize) / 2 - this.options.beanSize * 3,\r\n            beans: Array.from({ length: this.options.pointLength }, () => 1),\r\n            beanAnimaIndex: 0\r\n        };\r\n        this.run(this.draw);\r\n    }\r\n    draw() {\r\n        let op = this.options;\r\n        this.clearRect();\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        this.ctx.translate(this.bean.nowX, 0);\r\n        this.ctx.arc(0, 0, op.beanSize, (360 - this.bean.turn) * Math.PI / 180, this.bean.turn * Math.PI / 180, true);\r\n        this.ctx.lineTo(0, 0);\r\n        this.ctx.fill();\r\n        this.ctx.closePath();\r\n        this.ctx.restore();\r\n        this.drawPoint();\r\n        this.drawFillter();\r\n        this.drawText();\r\n        this.controller();\r\n    }\r\n    controller() {\r\n        let op = this.options;\r\n        if (this.bean.nowX >= (op.pointLength * op.beanSize) / 2 + op.beanSize * 2) {\r\n            this.bean.nowX = -(op.pointLength * op.beanSize) / 2 - op.beanSize * 3;\r\n            this.bean.beanAnimaIndex = 0;\r\n        }\r\n        if (this.bean.nowX <= -(op.pointLength * op.beanSize) / 2) {\r\n            this.bean.beanState = 2;\r\n        }\r\n        if (this.bean.turn <= 0)\r\n            this.bean.state = 2;\r\n        if (this.bean.turn >= 30)\r\n            this.bean.state = 1;\r\n        if (this.bean.state === 1)\r\n            this.bean.turn -= 8;\r\n        if (this.bean.state === 2)\r\n            this.bean.turn += 8;\r\n        if (this.bean.beanState === 1)\r\n            this.bean.nowX -= op.beanSize / 3;\r\n        if (this.bean.beanState === 2)\r\n            this.bean.nowX += op.beanSize / 3;\r\n    }\r\n    drawPoint() {\r\n        let op = this.options;\r\n        this.ctx.save();\r\n        this.setShadow();\r\n        this.ctx.translate(-(op.pointLength * op.beanSize) / 2, 0);\r\n        for (let i = 0; i < op.pointLength && i < this.bean.beanAnimaIndex; i++) {\r\n            this.ctx.beginPath();\r\n            if (i < this.bean.beanAnimaIndex)\r\n                this.ctx.arc(op.beanSize * i, 0, op.beanSize / 4, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n            this.ctx.closePath();\r\n        }\r\n        this.bean.beanAnimaIndex++;\r\n        this.ctx.restore();\r\n    }\r\n    drawFillter() {\r\n        let op = this.options;\r\n        this.clearRect(-op.beanSize / 3 + this.bean.nowX, -op.beanSize / 2, op.beanSize / 4);\r\n        this.clearRect(-(op.pointLength * op.beanSize) / 2 - op.beanSize / 2, -this.h, this.bean.nowX + (op.pointLength * op.beanSize) / 2 - op.beanSize / 2, this.h * 2);\r\n        this.clearRect(-(op.pointLength * op.beanSize) / 2, -this.h, -180, this.h * 2);\r\n        this.clearRect((op.pointLength * op.beanSize) / 2, -this.h, 180, this.h * 2);\r\n    }\r\n    setShadow() {\r\n        let op = this.options;\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX;\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY;\r\n        this.ctx.shadowBlur = op.shadowBlur;\r\n    }\r\n    drawText() {\r\n        let op = this.options;\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        let y = op.fontSize + op.textGap + op.beanSize;\r\n        this.ctx.fillText(op.text, 0, y);\r\n        this.ctx.closePath();\r\n        this.ctx.restore();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://web-loading1/./src/draw/model/Bean.ts?");

/***/ })

}]);