{
  "version": 3,
  "sources": ["../../../../node_modules/web-loading-test/src/utils.ts", "../../../../node_modules/web-loading-test/src/draw/model/BaseModel.ts", "../../../../node_modules/web-loading-test/src/draw/model/Gear.ts", "../../../../node_modules/web-loading-test/src/draw/model/Zoom.ts", "../../../../node_modules/web-loading-test/src/draw/model/Ring.ts", "../../../../node_modules/web-loading-test/src/draw/model/Bean.ts", "../../../../node_modules/web-loading-test/src/draw/model/Clock.ts", "../../../../node_modules/web-loading-test/src/draw/model/Pattern.ts", "../../../../node_modules/web-loading-test/src/draw/model/Roll.ts", "../../../../node_modules/web-loading-test/src/draw/model/Img.ts", "../../../../node_modules/web-loading-test/src/draw/model/Skeleton.ts", "../../../../node_modules/web-loading-test/src/draw/model/index.ts", "../../../../node_modules/web-loading-test/src/draw/index.ts", "../../../../node_modules/web-loading-test/src/Webloading/style.ts", "../../../../node_modules/web-loading-test/src/Webloading/index.ts", "../../../../node_modules/web-loading-test/src/loading.ts"],
  "sourcesContent": ["import { LogConfigType, OptionsType } from './types'\r\n\r\n/**\r\n * 支持的 loading 方式\r\n */\r\nexport enum LOADING_TYPES {\r\n  FULL = 'Full',\r\n  MINI = 'mini',\r\n  DOM = 'dom'\r\n}\r\n/**\r\n * 支持的 model\r\n */\r\nexport enum MODEL_TYPES {\r\n  GEAR = 'Gear',\r\n  RING = 'Ring',\r\n  Zoom = 'Zoom',\r\n  PATTERN = 'Pattern',\r\n  CLOCK = 'Clock',\r\n  BEAN = 'Bean',\r\n  ROLL = 'Roll',\r\n  IMG = 'Img',\r\n  SKELETON = 'Skeleton'\r\n}\r\n/**\r\n *\r\n * @returns 返回默认配置\r\n */\r\nexport function getDefOptions(): Required<OptionsType> {\r\n  return {\r\n    custom: null,\r\n    type: LOADING_TYPES.DOM,\r\n    model: MODEL_TYPES.RING,\r\n    miniClass: 'mini',\r\n    delayColse: 520,\r\n    optimization: false,\r\n    zIndex: '2001',\r\n    themeColor: 'rgba(64,158,255,1)',\r\n    bgColor: 'rgba(0, 0, 0, 0.8)',\r\n    shadowColor: 'rgba(64,158,255,0.6)',\r\n    shadowOffsetX: 2,\r\n    shadowOffsetY: 2,\r\n    shadowBlur: 5,\r\n    pointerEvents: false,\r\n    delay: 65,\r\n    text: '加载中...',\r\n    textGap: 8,\r\n    fontSize: 12,\r\n    fontFamily: 'Microsoft YaHei'\r\n  }\r\n}\r\nexport enum LOG_TYPES {\r\n  INFO = 1,\r\n  WARN = 2,\r\n  ERROR = 3\r\n}\r\n/**\r\n * 日志输出\r\n * @param message 内容\r\n * @param config 配置\r\n */\r\nexport class $Log {\r\n  static info(message: string) {\r\n    this.call(message, LOG_TYPES.INFO)\r\n  }\r\n  static warn(message: string) {\r\n    this.call(message, LOG_TYPES.WARN)\r\n  }\r\n  static error(message: string) {\r\n    this.call(message, LOG_TYPES.ERROR)\r\n  }\r\n  static call(\r\n    message: string,\r\n    type: LOG_TYPES = LOG_TYPES.INFO,\r\n    config: LogConfigType = {\r\n      color: getDefOptions().themeColor,\r\n      bgColor: getDefOptions().bgColor\r\n    }\r\n  ) {\r\n    let bgColor = config.bgColor\r\n    // 警告色不能改变\r\n    if (type === 2) bgColor = '#fffbe5'\r\n    // 错误色不能改变\r\n    if (type === 3) bgColor = '#fff0f0'\r\n    let style = `\r\n      background:${bgColor};\r\n      font-size:14px;\r\n      color:${config.color};\r\n      border: 1px solid;`\r\n    console.log(`%c web-loading:${message} `, style)\r\n  }\r\n}\r\n/**\r\n * 判空\r\n * @param value 判断值\r\n * @returns boolean\r\n */\r\nexport function isNull(value: any): value is null | undefined {\r\n  return value === undefined || value === null\r\n}\r\n/**\r\n * 清空 aniamtions\r\n * @param id\r\n */\r\nexport function clearAnimationFrame(id: number) {\r\n  if (!window.requestAnimationFrame) {\r\n    window.clearInterval(id)\r\n  } else {\r\n    window.cancelAnimationFrame(id)\r\n  }\r\n}\r\n", "import type { ElementStoreType, OptionsType, LimitType, $LogType } from '../../types'\r\nimport { isNull, clearAnimationFrame, $Log } from '../../utils'\r\nexport default class BaseModel<T extends OptionsType> {\r\n  w: number\r\n  h: number\r\n  canvas: HTMLCanvasElement\r\n  ctx: CanvasRenderingContext2D\r\n  options: T\r\n  store: ElementStoreType\r\n  webLog: $LogType\r\n  private stepClear: number\r\n  constructor(w: number, h: number, canvas: HTMLCanvasElement, options: T, store: ElementStoreType) {\r\n    this.w = w\r\n    this.h = h\r\n    this.canvas = canvas\r\n    // 默认获取一个2d画笔\r\n    this.ctx = canvas.getContext('2d')!\r\n    this.options = options\r\n    this.store = store\r\n    this.webLog = $Log\r\n    this.stepClear = 1\r\n    this._$initPoint()\r\n  }\r\n  /**\r\n   * 初始化options默认值\r\n   * @param options 传入默认值\r\n   * @param limits 值的限制\r\n   */\r\n  initOptions(options: T, limits?: Array<LimitType>) {\r\n    // 记录options\r\n    this.options = Object.assign(options, this.options)\r\n    this.store.options = this.options\r\n    // 判断需要限制属性值(只做提示)\r\n    if (limits && limits.length) {\r\n      limits.forEach((l: LimitType) => {\r\n        let mayKey = this.options[l.key as keyof typeof this.options]\r\n        if (!isNull(mayKey) && !l.limit(mayKey)) $Log.warn(l.message)\r\n      })\r\n    }\r\n  }\r\n  // 初始化画笔\r\n  private _$initPoint() {\r\n    this.clearRect()\r\n    // 默认主题色\r\n    let op = this.options\r\n    this.ctx.fillStyle = op.themeColor!\r\n    this.ctx.strokeStyle = op.themeColor!\r\n    this.ctx.shadowColor = op.shadowColor!\r\n    this.ctx.font = `${op.fontSize}px ${op.fontFamily}`\r\n    this.ctx.textAlign = 'center'\r\n    this.ctx.textBaseline = 'middle'\r\n    this.ctx.translate(this.w / 2, this.h / 2)\r\n    this.ctx.save()\r\n  }\r\n  // 清空画布\r\n  clearRect(x?: number, y?: number, w_r?: number, h?: number) {\r\n    // 因为已经把起点设置到中心，所需要扩张\r\n    if (!isNull(x) && !isNull(y) && !isNull(w_r) && !isNull(h)) {\r\n      this.ctx.clearRect(x, y, w_r, h)\r\n    }\r\n    // 圆形区域清空\r\n    else if (!isNull(x) && !isNull(y) && !isNull(w_r) && isNull(h)) {\r\n      let calcWidth = w_r - this.stepClear\r\n      let calcHeight = Math.sqrt(w_r * w_r - calcWidth * calcWidth)\r\n      let posX = x - calcWidth\r\n      let posY = y - calcHeight\r\n      let widthX = 2 * calcWidth\r\n      let heightY = 2 * calcHeight\r\n      if (this.stepClear <= w_r) {\r\n        this.ctx.clearRect(posX, posY, widthX, heightY)\r\n        this.stepClear += 1\r\n        this.clearRect(x, y, w_r)\r\n      } else {\r\n        this.stepClear = 1\r\n      }\r\n    } else this.ctx.clearRect(-this.w, -this.h, this.w * 2, this.h * 2)\r\n  }\r\n  /**\r\n   * 绘制圆角矩形\r\n   * @param x\r\n   * @param y\r\n   * @param w\r\n   * @param h\r\n   * @param r\r\n   */\r\n  drowRadiusRect(x: number, y: number, w: number, h: number, r: number) {\r\n    this.ctx.beginPath()\r\n    this.ctx.arc(x + r, y + r, r, 1 * Math.PI, 1.5 * Math.PI)\r\n    this.ctx.lineTo(x + w - r, y)\r\n    this.ctx.arc(x + w - r, y + r, r, 1.5 * Math.PI, 0)\r\n    this.ctx.lineTo(x + w, y + h - r)\r\n    this.ctx.arc(x + w - r, y + h - r, r, 0, 0.5 * Math.PI)\r\n    this.ctx.lineTo(x + r, y + h)\r\n    this.ctx.arc(x + r, y + h - r, r, 0.5 * Math.PI, Math.PI)\r\n    this.ctx.lineTo(x, y + r)\r\n    this.ctx.closePath()\r\n  }\r\n  // 开始动画\r\n  run(fun: Function) {\r\n    // 如果已经处于加载状态，无须重新实例\r\n    if (this.store.animationId) this.clearAnimationFrame(this.store.animationId)\r\n    this.animationFrame(fun)\r\n  }\r\n  /**\r\n   * 封装 requestAnimationFrame 触发动画针\r\n   * @param fun 触发函数\r\n   * @returns\r\n   */\r\n  animationFrame(fun: Function) {\r\n    // 兼容\r\n    if (!window.requestAnimationFrame) {\r\n      this.store.animationId = window.setInterval(fun, this.options.delay)\r\n    }\r\n    // 利用时间轴控制触发时间\r\n    let endTime = Date.now() + this.options.delay!\r\n    fun.call(this)\r\n    const run = () => {\r\n      if (Date.now() > endTime) {\r\n        fun.call(this)\r\n        endTime = Date.now() + this.options.delay!\r\n      }\r\n      this.store.animationId = window.requestAnimationFrame(run)\r\n    }\r\n    this.store.animationId = window.requestAnimationFrame(run)\r\n  }\r\n  /**\r\n   * 取消 animationFrame 动画针\r\n   * @param id 动画id\r\n   */\r\n  clearAnimationFrame(id: number) {\r\n    clearAnimationFrame(id)\r\n  }\r\n}\r\n", "import type { ElementStoreType } from '../../types'\r\nimport type { GearOptionsType } from '../types.d'\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from './BaseModel'\r\n// 默认值\r\nconst defaultOptions: Required<GearOptionsType> = {\r\n  ...getDefOptions(),\r\n  lineStartSkew: 0,\r\n  lineStart: 10,\r\n  lineEndSkew: 0,\r\n  lineEnd: 16,\r\n  lineWidth: 4,\r\n  lineCap: 'round',\r\n  lineNum: 10,\r\n  direction: true\r\n}\r\n// 值的限制\r\nconst limits = [\r\n  {\r\n    key: 'lineNum',\r\n    message: 'lineNum value 4-18',\r\n    limit: (key: any) => {\r\n      return key >= 4 && key <= 18\r\n    }\r\n  }\r\n]\r\nexport default class Gear extends BaseModel<Required<GearOptionsType>> {\r\n  aps: Array<number>\r\n  constructor(\r\n    w: number,\r\n    h: number,\r\n    canvas: HTMLCanvasElement,\r\n    options: Required<GearOptionsType>,\r\n    store: ElementStoreType\r\n  ) {\r\n    super(w, h, canvas, options, store)\r\n    // 1.初始化options(防止属性为空)\r\n    this.initOptions(defaultOptions, limits)\r\n    // 2.根据高宽优化默认值\r\n    this.optimization(this.options.textGap + this.options.lineEnd)\r\n    // 3.初始化画笔\r\n    this.initPoint()\r\n    // 4.开始动画针并记录状态\r\n    this.aps = Array.from({ length: this.options.lineNum }, (_, _index) => _index)\r\n    this.run(this.draw)\r\n  }\r\n  initPoint() {\r\n    let op = this.options\r\n    this.ctx.lineCap = op.lineCap\r\n    this.ctx.lineWidth = op.lineWidth\r\n    this.ctx.save()\r\n  }\r\n  draw() {\r\n    this.clearRect()\r\n    // 流程\r\n    this.controller()\r\n    // 绘制齿轮\r\n    this.drawGear()\r\n    // 绘制文字\r\n    this.drawText()\r\n  }\r\n  controller() {\r\n    let op = this.options\r\n    if (op.direction) this.aps = this.aps.map((a) => (a - 1 <= 0 ? this.aps.length - 1 : a - 1))\r\n    else this.aps = this.aps.map((a) => (a + 1 > this.aps.length ? 0 : a + 1))\r\n  }\r\n  drawGear() {\r\n    let op = this.options\r\n    this.ctx.save()\r\n    // 设置阴影\r\n    this.ctx.shadowOffsetX = op.shadowOffsetX\r\n    this.ctx.shadowOffsetY = op.shadowOffsetY\r\n    this.ctx.shadowBlur = op.shadowBlur\r\n    // 绘制加载齿轮\r\n    for (let i = 0; i < this.aps.length; i++) {\r\n      this.ctx.beginPath()\r\n      this.ctx.globalAlpha = this.aps[i] / 10\r\n      this.ctx.moveTo(op.lineEndSkew, op.lineStart)\r\n      this.ctx.lineTo(op.lineStartSkew, op.lineEnd)\r\n      this.ctx.stroke()\r\n      this.ctx.closePath()\r\n      this.ctx.rotate((2 * Math.PI) / op.lineNum)\r\n    }\r\n    this.ctx.restore()\r\n  }\r\n  drawText() {\r\n    let op = this.options\r\n    this.ctx.save()\r\n    this.ctx.beginPath()\r\n    // 位置+文字+间隔\r\n    let y = op.lineEnd + op.fontSize + op.textGap\r\n    this.ctx.fillText(op.text, 0, y)\r\n    this.ctx.closePath()\r\n    this.ctx.restore()\r\n  }\r\n  /**\r\n   * 优化处理(主要优化默认文字位置)\r\n   * @param textY\r\n   */\r\n  optimization(textY: number) {\r\n    // 如果开启优化(优化字体位置)\r\n    if (this.options.optimization) {\r\n      // 根据宽高调整\r\n      if (textY * 4 > this.h) {\r\n        this.options.lineStart = this.h / 6 - 5\r\n        this.options.lineEnd = this.h / 6\r\n        this.options.textGap = 2\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import type { ElementStoreType } from \"../../types\";\r\nimport type { ZoomOptionsType } from '../types'\r\nimport { getDefOptions } from '../../utils'\r\nimport { ZOOM_ACTION } from '../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<ZoomOptionsType> = {\r\n    ...getDefOptions(),\r\n    zoomGap: 10,\r\n    maxSize: 16,\r\n    zoomNum: 5,\r\n    lineWidth: 10,\r\n    zoomHeight: 2,\r\n    lineCap: 'round',\r\n    action: ZOOM_ACTION.SCALE,\r\n    direction: true,\r\n    zoomColors: []\r\n}\r\ninterface ListType {\r\n    value: number,\r\n    state: number\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'lineWidth', message: 'lineWidth(default:10) <=  maxSize(default:16)', limit: (key: any) => {\r\n        return defaultOptions.lineWidth <= defaultOptions.maxSize\r\n    },\r\n}, {\r\n    key: 'maxSize', message: 'lineWidth(default:10) <=  maxSize(default:16)', limit: (key: any) => {\r\n        return defaultOptions.lineWidth <= defaultOptions.maxSize\r\n    },\r\n}]\r\nexport default class Zoom extends BaseModel<Required<ZoomOptionsType>> {\r\n    list: Array<ListType> // 每次旋转角度(默认每次旋转10)\r\n    zoomIndex: number\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<ZoomOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        this.zoomIndex = defaultOptions.direction ? 0 : defaultOptions.zoomNum - 1\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        // 2.初始化画笔\r\n        this.initPoint()\r\n        // 3.开始动画针并记录状态\r\n        this.list = Array.from({ length: this.options.zoomNum }, (_, _index) => Object.assign({\r\n            value: defaultOptions.lineWidth,\r\n            // 0:初始,1:变大,2:变小\r\n            state: 0\r\n        }))\r\n        this.run(this.draw)\r\n    }\r\n    initPoint() {\r\n        let op = this.options\r\n        this.ctx.lineCap = op.lineCap;\r\n        this.ctx.lineWidth = op.lineWidth\r\n        // 居中((zoom宽度*个数+1)+(zoom空隙*个数+1))/2,因第一个zoom就移位了所需要个数+1,高度/2\r\n        this.ctx.translate(-(((op.lineWidth) * (op.zoomNum + 1)) + (op.zoomGap * (op.zoomNum + 1))) / 2,\r\n            -(op.zoomHeight) / 2)\r\n        this.ctx.save()\r\n\r\n    }\r\n    draw() {\r\n        this.clearRect()\r\n        // 绘制zoom\r\n        this.drawZoom()\r\n        // 绘制字体\r\n        this.drawText()\r\n        // 流程\r\n        this.controller()\r\n    }\r\n    controller() {\r\n        let op = this.options\r\n        if (op.direction && this.zoomIndex >= op.zoomNum) this.zoomIndex = 0\r\n        else if (op.direction && this.zoomIndex < 0) this.zoomIndex = op.zoomNum - 1\r\n    }\r\n    drawZoom() {\r\n        let op = this.options\r\n        for (let i = 0; i < op.zoomNum; i++) {\r\n            // 流程变化\r\n            if (this.list[i].state === 1) this.list[i].value += 2\r\n            else if (this.list[i].state === 2 && this.list[i].value >= op.lineWidth) this.list[i].value--\r\n            if (op.action === ZOOM_ACTION.SCALE) this.ctx.lineWidth = this.list[i].value\r\n            // 状态变化\r\n            if (i === this.zoomIndex) {\r\n                if (this.list[i].value > op.maxSize) {\r\n                    this.list[i].state = 2\r\n                    op.direction ? this.zoomIndex++ : this.zoomIndex - 1 >= 0 ? this.zoomIndex-- : this.zoomIndex = op.zoomNum - 1\r\n                }\r\n                if (this.list[i].value <= op.lineWidth) this.list[i].state = 1\r\n            }\r\n            // 根据num绘制\r\n            this.ctx.beginPath()\r\n            if (op.zoomColors.length > 0 && op.zoomColors[i]) this.ctx.strokeStyle = op.zoomColors[i]\r\n            else this.ctx.strokeStyle = op.themeColor\r\n            let sH = 0, eH = op.zoomHeight\r\n            if (op.action === ZOOM_ACTION.HEIGHT || op.action === ZOOM_ACTION.WAVE) {\r\n                sH = -this.list[i].value\r\n            }\r\n            if (op.action === ZOOM_ACTION.WAVE) {\r\n                eH = -this.list[i].value\r\n            }\r\n            this.ctx.moveTo((i + 1) * (op.lineWidth + op.zoomGap), sH)\r\n            this.ctx.lineTo((i + 1) * (op.lineWidth + op.zoomGap), eH)\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n        }\r\n    }\r\n    drawText() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        let y = op.fontSize + op.maxSize\r\n        this.ctx.fillText(op.text, (((op.lineWidth) * (op.zoomNum + 1)) + (op.zoomGap * (op.zoomNum + 1))) / 2, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { RingOptionsType } from '../types'\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<RingOptionsType> = {\r\n    ...getDefOptions(),\r\n    arcGap: Math.PI / 4,\r\n    ringGap: 10,\r\n    lineWidth: 2,\r\n    ringNum: 2,\r\n    radius: 6,\r\n    lineCap: 'round',\r\n    turn: 10,\r\n    ringsTurn: [Math.PI, Math.PI / 4],\r\n    direction: true\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'ringNum', message: 'ringNum value 1-10', limit: (key: any) => {\r\n        return key >= 1 && key <= 10\r\n    }\r\n}, {\r\n    key: 'ringsTurn', message: `ringsTurn size ${defaultOptions.ringNum}`, limit: (key: any) => {\r\n        return key.length <= defaultOptions.ringNum\r\n    }\r\n}]\r\nexport default class Ring extends BaseModel<Required<RingOptionsType>> {\r\n    rotate: number // 每次旋转角度(默认每次旋转10)\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<RingOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        this.rotate = 10\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        // 2.初始化画笔\r\n        this.initPoint()\r\n        // 3.开始动画针并记录状态\r\n        this.run(this.draw)\r\n    }\r\n    initPoint() {\r\n        let op = this.options\r\n        this.ctx.lineCap = op.lineCap;\r\n        this.ctx.lineWidth = op.lineWidth\r\n        this.ctx.save()\r\n    }\r\n    draw() {\r\n        this.clearRect()\r\n        // 流程\r\n        this.controller()\r\n        // 绘制文字\r\n        this.drawText()\r\n    }\r\n    controller() {\r\n        this.ctx.save()\r\n        let op = this.options\r\n        let rotate = this.rotate * Math.PI / 180 * (op.direction ? 1 : -1)\r\n        this.ctx.rotate(rotate)\r\n        // 画环\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY\r\n        this.ctx.shadowBlur = op.shadowBlur\r\n        for (let i = 1; i <= op.ringNum; i++) {\r\n            this.drawRing(op.radius + ((i - 1) * op.ringGap), op.arcGap, op.ringsTurn && op.ringsTurn.length > 0 ? op.ringsTurn[i - 1] : Math.PI / i)\r\n        }\r\n        this.rotate += op.turn\r\n        this.ctx.restore()\r\n    }\r\n    drawText() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        // 数量*(半径+环空隙)+文字空隙\r\n        let y = op.ringNum * (op.radius + op.ringGap) + op.textGap\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawRing(r: number, arcGap: number = 1, angle: number = 0) {\r\n        // 第一个弧形\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(0, 0, r, arcGap + angle, Math.PI + angle)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        // 第二个弧形\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(0, 0, r, Math.PI + arcGap + angle, angle)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n    }\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { BeanOptionsType } from \"../types.d\";\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<BeanOptionsType> = {\r\n    ...getDefOptions(),\r\n    beanSize: 15,\r\n    pointLength: 15,\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'pointLength', message: 'pointLength value >= 5', limit: (key: any) => {\r\n        return key >= 5\r\n    }\r\n}, {\r\n    key: 'beanSize', message: 'beanSize value >= 5', limit: (key: any) => {\r\n        return key >= 5\r\n    }\r\n}]\r\ninterface BeanType {\r\n    turn: number\r\n    state: number\r\n    nowX: number\r\n    beans: Array<number>\r\n    beanState: number\r\n    beanAnimaIndex: number\r\n}\r\nexport default class Bean extends BaseModel<Required<BeanOptionsType>> {\r\n    bean: BeanType\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<BeanOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        this.bean = {\r\n            turn: 30,\r\n            state: 1,\r\n            beanState: 1,\r\n            nowX: -(this.options.pointLength * this.options.beanSize) / 2 - this.options.beanSize * 3,\r\n            beans: Array.from({ length: this.options.pointLength }, () => 1),\r\n            beanAnimaIndex: 0\r\n        }\r\n        this.run(this.draw)\r\n\r\n    }\r\n    draw() {\r\n        let op = this.options\r\n        this.clearRect()\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.ctx.translate(this.bean.nowX, 0)\r\n        this.ctx.arc(0, 0, op.beanSize, (360 - this.bean.turn) * Math.PI / 180, this.bean.turn * Math.PI / 180, true);\r\n        this.ctx.lineTo(0, 0);\r\n        this.ctx.fill()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n        // 绘制点\r\n        this.drawPoint()\r\n        // 过滤画布\r\n        this.drawFillter()\r\n        // 绘制文字\r\n        this.drawText()\r\n        // 流程\r\n        this.controller()\r\n\r\n    }\r\n    controller() {\r\n        let op = this.options\r\n        if (this.bean.nowX >= (op.pointLength * op.beanSize) / 2 + op.beanSize * 2) {\r\n            this.bean.nowX = -(op.pointLength * op.beanSize) / 2 - op.beanSize * 3\r\n            this.bean.beanAnimaIndex = 0\r\n        }\r\n        if (this.bean.nowX <= -(op.pointLength * op.beanSize) / 2) {\r\n            this.bean.beanState = 2\r\n        }\r\n        if (this.bean.turn <= 0) this.bean.state = 2\r\n        if (this.bean.turn >= 30) this.bean.state = 1\r\n        if (this.bean.state === 1) this.bean.turn -= 8\r\n        if (this.bean.state === 2) this.bean.turn += 8\r\n        if (this.bean.beanState === 1) this.bean.nowX -= op.beanSize / 3\r\n        if (this.bean.beanState === 2) this.bean.nowX += op.beanSize / 3\r\n    }\r\n    drawPoint() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.setShadow()\r\n        this.ctx.translate(-(op.pointLength * op.beanSize) / 2, 0)\r\n        for (let i = 0; i < op.pointLength && i < this.bean.beanAnimaIndex; i++) {\r\n            this.ctx.beginPath()\r\n            if (i < this.bean.beanAnimaIndex) this.ctx.arc(op.beanSize * i, 0, op.beanSize / 4, 0, Math.PI * 2)\r\n            this.ctx.fill()\r\n            this.ctx.closePath()\r\n        }\r\n        this.bean.beanAnimaIndex++\r\n        this.ctx.restore()\r\n    }\r\n    // 滤布\r\n    drawFillter() {\r\n        let op = this.options\r\n        // 眼镜\r\n        this.clearRect(-op.beanSize / 3 + this.bean.nowX, -op.beanSize / 2, op.beanSize / 4)\r\n        // 跟随\r\n        this.clearRect(-(op.pointLength * op.beanSize) / 2 - op.beanSize / 2, -this.h, this.bean.nowX + (op.pointLength * op.beanSize) / 2 - op.beanSize / 2, this.h * 2)\r\n        // 进入\r\n        this.clearRect(-(op.pointLength * op.beanSize) / 2, -this.h, -180, this.h * 2)\r\n        // 离开\r\n        this.clearRect((op.pointLength * op.beanSize) / 2, -this.h, 180, this.h * 2)\r\n    }\r\n    setShadow() {\r\n        let op = this.options\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY\r\n        this.ctx.shadowBlur = op.shadowBlur\r\n    }\r\n    drawText() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        let y = op.fontSize + op.textGap + op.beanSize\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { ClockOptionsType } from \"../types.d\";\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<ClockOptionsType> = {\r\n    ...getDefOptions(),\r\n    lineCap: 'round',\r\n    lineWidth: 2,\r\n    lineColors: ['#d4d4d4', '#06ab2d', '#8a0303'],\r\n    clockSize: 15,\r\n    clockGap: 4,\r\n    hLine: true,\r\n    mLine: false,\r\n    sLine: true,\r\n    textTime: ''\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'lineColors', message: 'lineColors.length <= 3', limit: (key: any) => {\r\n        return key.length <= 3\r\n    }\r\n}]\r\nexport default class Clock extends BaseModel<Required<ClockOptionsType>> {\r\n    // 记录\r\n    nowTime: number\r\n    nowS: number\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<ClockOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        // 3.初始化画笔\r\n        this.initPoint()\r\n        this.nowTime = -1\r\n        this.nowS = 0\r\n        this.run(this.draw)\r\n    }\r\n    initPoint() {\r\n        let op = this.options\r\n        this.ctx.lineCap = op.lineCap;\r\n        this.ctx.lineWidth = op.lineWidth\r\n        this.ctx.save()\r\n    }\r\n    draw() {\r\n        this.clearRect()\r\n        // 绘制clock\r\n        this.drawClock()\r\n    }\r\n    drawText(h: number, m: number, s: number) {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        let y = op.clockSize * 2 + op.textGap\r\n        if (op.textTime === 'time') op.text = `${h} : ${m} : ${s}`\r\n        if (op.textTime === 's') op.text = this.nowTime + 's'\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawClock() {\r\n        let op = this.options\r\n        let s = new Date().getSeconds()\r\n        let m = new Date().getMinutes()\r\n        let h = new Date().getHours()\r\n        // 顶\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.moveTo(-5, -(op.clockSize + op.clockGap))\r\n        this.ctx.lineTo(5, -(op.clockSize + op.clockGap))\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        // 外圆\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.arc(0, 0, op.clockSize, 0, Math.PI * 2)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n        // 刻度\r\n        this.ctx.save()\r\n        for (let i = 0; i < 12; i++) {\r\n            this.ctx.beginPath()\r\n            this.ctx.rotate((360 / 12) * Math.PI / 180)\r\n            this.ctx.moveTo(op.clockSize - op.clockGap, 0)\r\n            this.ctx.lineTo(op.clockSize - op.clockGap, 0)\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n        }\r\n        this.ctx.restore()\r\n        // 时针\r\n        if (op.hLine) {\r\n            this.ctx.save()\r\n            this.ctx.beginPath()\r\n            this.ctx.lineWidth = op.lineWidth * 1.6\r\n            if (op.lineColors[0]) this.ctx.strokeStyle = op.lineColors[0]\r\n            // 初始化点\r\n            this.ctx.rotate((-90 * Math.PI) / 180)\r\n            this.ctx.rotate(((h * 360 / 60) * Math.PI) / 180)\r\n            this.ctx.moveTo(-1, 0)\r\n            this.ctx.lineTo(op.clockSize / 2, 0)\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n            this.ctx.restore()\r\n        }\r\n        // 分针\r\n        if (op.mLine) {\r\n            this.ctx.save()\r\n            this.ctx.beginPath()\r\n            if (op.lineColors[1]) this.ctx.strokeStyle = op.lineColors[1]\r\n            this.ctx.lineWidth = op.lineWidth * 1.2\r\n            // 初始化点\r\n            this.ctx.rotate((-90 * Math.PI) / 180)\r\n            this.ctx.rotate(((m * 360 / 60) * Math.PI) / 180)\r\n            this.ctx.moveTo(-1, 0)\r\n            this.ctx.lineTo(op.clockSize / 2 + op.clockGap, 0)\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n            this.ctx.restore()\r\n        }\r\n        // 秒针\r\n        if (op.sLine) {\r\n            this.ctx.save()\r\n            this.ctx.beginPath()\r\n            if (op.lineColors[2]) this.ctx.strokeStyle = op.lineColors[2]\r\n            // 初始化点\r\n            this.ctx.rotate((-90 * Math.PI) / 180)\r\n            this.ctx.rotate(((s * 360 / 60) * Math.PI) / 180)\r\n            this.ctx.moveTo(-1, 0)\r\n            this.ctx.lineTo(op.clockSize - op.clockGap, 0)\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n            this.ctx.restore()\r\n            if (this.nowS !== s) this.nowTime++\r\n            this.nowS = s\r\n        }\r\n        // 绘制文字\r\n        this.drawText(h, m, s)\r\n\r\n    }\r\n    setShadow() {\r\n        let op = this.options\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY\r\n        this.ctx.shadowBlur = op.shadowBlur\r\n    }\r\n\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { PatternOptionsType } from \"../types.d\";\r\nimport { getDefOptions } from '../../utils'\r\nimport { PATTERN_CHART } from '../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<PatternOptionsType> = {\r\n    ...getDefOptions(),\r\n    charts: [PATTERN_CHART.ARC, PATTERN_CHART.RECT, PATTERN_CHART.TRIANGLE, PATTERN_CHART.HEART, PATTERN_CHART.POLYGON],\r\n    chartColors: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#0960bd'],\r\n    maxHeight: 60,\r\n    chartSize: 12\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'chartSize', message: 'chartSize value 5-24', limit: (key: any) => {\r\n        return key >= 5 && key <= 24\r\n    }\r\n}, {\r\n    key: 'delay', message: 'Pattern.delay not allowed update', limit: (key: any) => {\r\n        return key === getDefOptions().delay\r\n    }\r\n}]\r\ninterface PatternType {\r\n    // 当前高度\r\n    nowHeight: number\r\n    // 当前chart\r\n    chart: PATTERN_CHART\r\n    // 当前颜色\r\n    color: string,\r\n    // 当前旋转角度\r\n    turn: number\r\n    // 影子\r\n    shadow: number\r\n    // 0:初始化,1:上升,2:下降\r\n    nowSatate: number\r\n}\r\nexport default class Pattern extends BaseModel<Required<PatternOptionsType>> {\r\n    pattern: PatternType\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<PatternOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        // 3.初始化画笔\r\n        this.initPoint()\r\n        this.pattern = { color: getDefOptions().themeColor, nowHeight: 10, chart: PATTERN_CHART.RECT, shadow: 0, nowSatate: 1, turn: 0 }\r\n        this.run(this.draw)\r\n    }\r\n    initPoint() {\r\n        // 初始化速度\r\n        this.options.delay = 10\r\n    }\r\n    draw() {\r\n        let op = this.options\r\n        this.clearRect()\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.ctx.translate(0, this.pattern.nowHeight)\r\n        this.ctx.rotate(this.pattern.turn / Math.PI * 2)\r\n        this.ctx.fillStyle = this.pattern.color\r\n        this.selectChart(0, 0, op.chartSize)\r\n        this.ctx.closePath()\r\n        this.ctx.restore();\r\n        this.drawShadow()\r\n        // 清空隐藏部分\r\n        this.clearRect(-this.w, 0, this.w * 2, this.h)\r\n        // 控制数值变化\r\n        this.controller(op)\r\n        // 绘制文字\r\n        this.drawText(op)\r\n\r\n    }\r\n    controller(op: Required<PatternOptionsType>) {\r\n        this.pattern.turn += 10 // 角度\r\n        // 高度与影子\r\n        if (this.pattern.nowSatate === 1) {\r\n            this.pattern.nowHeight--\r\n            this.pattern.shadow += 0.2\r\n        }\r\n        else if (this.pattern.nowSatate === 2) {\r\n            this.pattern.nowHeight++\r\n            this.pattern.shadow -= 0.2\r\n        }\r\n        // 速度\r\n        if (this.pattern.nowHeight <= -op.chartSize && this.pattern.nowHeight % 8 == 0) {\r\n            op.delay++\r\n        }\r\n        // 范围\r\n        if (this.pattern.nowHeight <= -op.maxHeight) {\r\n            this.pattern.nowSatate = 2\r\n\r\n        }\r\n        else if (this.pattern.nowHeight >= op.chartSize) {\r\n            this.pattern.nowSatate = 1\r\n            op.delay = 10\r\n            // 切换图形\r\n            this.pattern.chart = op.charts[parseInt(String(Math.random() * op.charts.length))]\r\n            // 切换颜色\r\n            this.pattern.color = op.chartColors[parseInt(String(Math.random() * op.chartColors.length))]\r\n        }\r\n    }\r\n    selectChart(x: number, y: number, size: number) {\r\n        switch (this.pattern.chart) {\r\n            case PATTERN_CHART.RECT:\r\n                this.drawRect(x, y, size)\r\n                break\r\n            case PATTERN_CHART.ARC:\r\n                this.drawArc(x, y, size)\r\n                break\r\n            case PATTERN_CHART.TRIANGLE:\r\n                this.drawTriangle(x, y, size)\r\n                break\r\n            case PATTERN_CHART.HEART:\r\n                this.drawHeart(x, y, size)\r\n                break\r\n            case PATTERN_CHART.POLYGON:\r\n                this.drawPolygon(x, y, size)\r\n                break\r\n        }\r\n    }\r\n    drawText(op: Required<PatternOptionsType>) {\r\n        // 位置+文字+间隔\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.ctx.fillStyle = this.pattern.color\r\n        let y = op.fontSize + op.textGap\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawShadow() {\r\n        // 绘制影子\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.globalAlpha = 0.2\r\n        this.ctx.strokeStyle = this.pattern.color\r\n        this.ctx.moveTo(-this.pattern.shadow / 2, 0)\r\n        this.ctx.lineTo(this.pattern.shadow, 0)\r\n        this.ctx.stroke()\r\n        this.ctx.beginPath()\r\n        this.ctx.restore()\r\n    }\r\n    drawRect(x: number, y: number, size: number) {\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.translate(-size / 2, -size / 2)\r\n        this.ctx.fillRect(x, y, size, size)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawArc(x: number, y: number, size: number) {\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.arc(x, y, size / 2, 0, Math.PI * 2)\r\n        this.ctx.fill()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawTriangle(x: number, y: number, size: number) {\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.translate(-size / 2, -(size / 2 * Math.sqrt(3)) / 2)\r\n        this.ctx.moveTo(x, y);\r\n        this.ctx.lineTo(size, 0);\r\n        this.ctx.lineTo(size / 2, size / 2 * Math.sqrt(3));\r\n        this.ctx.lineTo(x, y);\r\n        this.ctx.fill()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawHeart(x: number, y: number, size: number) {\r\n        size = size / 2\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.translate(0, -(size * 2) / 2)\r\n        this.ctx.moveTo(x, y);\r\n        this.ctx.bezierCurveTo(size / 2, -size, size * 3, -size / 2, y, size * 2);\r\n        this.ctx.moveTo(x, y);\r\n        this.ctx.bezierCurveTo(-size / 2, -size, -size * 3, -size / 2, y, size * 2);\r\n        this.ctx.fill()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawPolygon(x: number, y: number, size: number) {\r\n        this.ctx.save();\r\n        this.ctx.beginPath()\r\n        this.setShadow()\r\n        this.ctx.translate(-size / 2, -size / 2)\r\n        this.ctx.moveTo(x, y);\r\n        this.ctx.lineTo(size, y);\r\n        this.ctx.lineTo(size + size / 2, size / 2);\r\n        this.ctx.lineTo(size, size / 2 + size / 2);\r\n        this.ctx.lineTo(x, size);\r\n        this.ctx.lineTo(x - size / 2, size - size / 2);\r\n        this.ctx.lineTo(x, y);\r\n        this.ctx.fill()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n\r\n    setShadow() {\r\n        let op = this.options\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY\r\n        this.ctx.shadowBlur = op.shadowBlur\r\n    }\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { RollOptionsType } from '../types'\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from \"./BaseModel\";\r\nimport { ROLL_CHART } from \"../utils\";\r\n// 默认值\r\nconst defaultOptions: Required<RollOptionsType> = {\r\n    ...getDefOptions(),\r\n    rollGap: 12,\r\n    childNum: 4,\r\n    rollSize: 16,\r\n    showChild: true,\r\n    chart: ROLL_CHART.WHEEL,\r\n    windmills: ['#1ab3ea', '#de6834', '#30925d', '#f48ea5'],\r\n    windmillPointColor: '#f2c31f',\r\n    fixad: false\r\n}\r\n// 值的限制\r\nconst limits = [{\r\n    key: 'childNum', message: 'chartSize value 4-10', limit: (key: any) => {\r\n        return key >= 4 && key <= 10\r\n    }\r\n}, {\r\n    key: 'delay', message: 'Roll.delay not allowed update', limit: (key: any) => {\r\n        return key === getDefOptions().delay\r\n    }\r\n}]\r\ninterface childType {\r\n    turn: number\r\n    x: number\r\n}\r\ninterface RollType {\r\n    turn: number\r\n    nowX: number\r\n    state: number\r\n    child: Array<childType>\r\n}\r\nexport default class Roll extends BaseModel<Required<RollOptionsType>> {\r\n    Roll: RollType\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<RollOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, limits)\r\n        // 2.初始化画笔\r\n        this.Roll = {\r\n            turn: 1,\r\n            nowX: this.options.fixad ? 0 : (this.options.childNum / 2) * (this.options.rollSize + this.options.rollGap) + this.options.rollGap / 2,\r\n            state: 2,\r\n            child: []\r\n        }\r\n        this.run(this.draw)\r\n    }\r\n    draw() {\r\n        this.clearRect()\r\n        // 地面\r\n        this.drawGround()\r\n        // 绘制child\r\n        this.drawChild()\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.ctx.translate(-this.Roll.nowX, 0)\r\n        this.ctx.rotate(this.Roll.turn * Math.PI / 180)\r\n        // 绘制图形\r\n        this.selectChart()\r\n        // 流程\r\n        this.controller()\r\n        this.ctx.restore()\r\n        // 绘制文字\r\n        this.drawText()\r\n\r\n    }\r\n    selectChart() {\r\n        let op = this.options\r\n        switch (op.chart) {\r\n            case ROLL_CHART.RECT:\r\n                this.drawRect()\r\n                break\r\n            case ROLL_CHART.WHEEL:\r\n                this.drawWheel()\r\n                break\r\n            case ROLL_CHART.WINDMILL:\r\n                this.drawWindmill()\r\n                break\r\n        }\r\n    }\r\n    controller() {\r\n        let op = this.options\r\n        if (this.Roll.state === 1) {\r\n            this.Roll.turn -= 10\r\n            if (op.delay < 20 && !op.fixad) op.delay += 2\r\n        }\r\n        if (this.Roll.state === 2) {\r\n            this.Roll.turn += 10\r\n            if (op.delay > 10 && !op.fixad) op.delay -= 5\r\n        }\r\n        if (op.fixad) return\r\n        if (this.Roll.nowX <= -(op.childNum / 2) * (op.rollSize + op.rollGap / 1.6)) this.Roll.state = 1\r\n        if (this.Roll.nowX >= (op.childNum / 2) * (op.rollSize + op.rollGap) + op.rollGap / 2) this.Roll.state = 2\r\n        if (this.Roll.state === 1) this.Roll.nowX++\r\n        if (this.Roll.state === 2) this.Roll.nowX--\r\n\r\n\r\n        let child = this.Roll.child\r\n        if (this.Roll.nowX % (op.rollSize + op.rollGap) == 0 && this.Roll.state === 2) {\r\n            child.push({ turn: this.Roll.turn, x: this.Roll.nowX })\r\n        }\r\n        if (this.Roll.state === 1 && child[child.length - 1] && child[child.length - 1].x === this.Roll.nowX) {\r\n            this.Roll.child.pop()\r\n        }\r\n    }\r\n    // 正方形\r\n    drawRect() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.setShadow()\r\n        this.ctx.translate(-op.rollSize / 2, -op.rollSize / 2)\r\n        this.ctx.fillRect(0, 0, op.rollSize, op.rollSize)\r\n        this.ctx.restore()\r\n\r\n    }\r\n    // 轮子\r\n    drawWheel() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.lineWidth = 4\r\n        // 内圆1\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(0, 0, op.rollSize / 6, 0, Math.PI * 2)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        // 内圆2\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(0, 0, op.rollSize / 2, 0, Math.PI * 2)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        // 外圆\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(0, 0, op.rollSize, 0, Math.PI * 2)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        // 轮毂\r\n        for (let i = 0; i < 6; i++) {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(0, op.rollSize / 2)\r\n            this.ctx.lineTo(0, op.rollSize)\r\n            this.ctx.stroke()\r\n            this.ctx.rotate((360 / 6) * Math.PI / 180)\r\n            this.ctx.closePath()\r\n        }\r\n        this.ctx.restore()\r\n    }\r\n    // 风车\r\n    drawWindmill() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        for (let i = 0; i < op.windmills.length; i++) {\r\n            this.ctx.beginPath()\r\n            this.ctx.fillStyle = op.windmills[i]\r\n            this.ctx.arc(-op.rollSize / 2, 0, op.rollSize, 0, Math.PI)\r\n            this.ctx.fill()\r\n            this.ctx.closePath()\r\n            this.ctx.rotate((360 / 4) * Math.PI / 180)\r\n        }\r\n        // 上层合并\r\n        this.ctx.beginPath()\r\n        this.ctx.fillStyle = op.windmillPointColor\r\n        this.ctx.arc(0, 0, op.rollSize / 2, 0, Math.PI * 2)\r\n        this.ctx.fill()\r\n        this.ctx.restore()\r\n    }\r\n    drawChild() {\r\n        let op = this.options\r\n        if (!op.showChild) return\r\n        this.Roll.child.forEach((c, index) => {\r\n            this.ctx.save()\r\n            this.ctx.translate(-c.x, 0)\r\n            this.ctx.globalAlpha = (index + 1) / 10\r\n            this.ctx.rotate(c.turn * Math.PI / 180)\r\n            this.selectChart()\r\n            this.ctx.restore()\r\n        })\r\n    }\r\n    drawGround() {\r\n        let op = this.options\r\n        if (op.chart !== ROLL_CHART.WHEEL) return\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        this.ctx.lineWidth = 3\r\n        this.ctx.globalAlpha = 0.03\r\n        this.ctx.moveTo(-(op.childNum / 2) * (op.rollSize + op.rollGap / 1.6), op.rollSize + 3)\r\n        this.ctx.lineTo((op.childNum / 2) * (op.rollSize + op.rollGap) + op.rollGap / 2, op.rollSize + 3)\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    drawText() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        let y = op.fontSize + op.textGap + op.rollSize\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n    setShadow() {\r\n        let op = this.options\r\n        this.ctx.shadowOffsetX = op.shadowOffsetX\r\n        this.ctx.shadowOffsetY = op.shadowOffsetY\r\n        this.ctx.shadowBlur = op.shadowBlur\r\n    }\r\n\r\n}", "import type { ElementStoreType } from \"../../types\";\r\nimport type { ImageOptionsType } from \"../types\";\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from \"./BaseModel\";\r\n// 默认值\r\nconst defaultOptions: Required<ImageOptionsType> = {\r\n    ...getDefOptions(),\r\n    src: '',\r\n    width: 52,\r\n    height: 52,\r\n    turn: false\r\n}\r\nexport default class Img extends BaseModel<Required<ImageOptionsType>> {\r\n    img: HTMLImageElement\r\n    turn: number\r\n    constructor(w: number, h: number, canvas: HTMLCanvasElement, options: Required<ImageOptionsType>, store: ElementStoreType) {\r\n        super(w, h, canvas, options, store)\r\n        // 1.初始化options(防止属性为空)\r\n        this.initOptions(defaultOptions, [])\r\n        this.img = new Image();\r\n        this.img.src = this.options.src\r\n        this.turn = 10\r\n        // 4.开始动画针并记录状态\r\n        this.img.onload = () => {\r\n            this.run(this.draw)\r\n        }\r\n    }\r\n    draw() {\r\n        this.clearRect()\r\n        this.drawImg()\r\n        this.drawText()\r\n\r\n    }\r\n    drawImg() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        if (op.turn) this.ctx.rotate(this.turn * Math.PI / 180)\r\n        this.ctx.drawImage(this.img, -op.width / 2, -op.height / 2, op.width, op.height)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n        this.turn += 10\r\n    }\r\n    drawText() {\r\n        let op = this.options\r\n        this.ctx.save()\r\n        this.ctx.beginPath()\r\n        let y = op.fontSize + op.textGap + op.height / 2\r\n        this.ctx.fillText(op.text, 0, y)\r\n        this.ctx.closePath()\r\n        this.ctx.restore()\r\n    }\r\n}", "import type { ElementStoreType } from '../../types'\r\nimport type { SkeletonOptionsType } from '../types'\r\nimport { getDefOptions } from '../../utils'\r\nimport BaseModel from './BaseModel'\r\n// 默认值\r\nconst defaultOptions: Required<SkeletonOptionsType> = {\r\n  ...getDefOptions(),\r\n  skeletonColor: 'rgb(240, 240, 240)',\r\n  skeletonAnimationColor: 'rgb(226, 226, 226)',\r\n  radius: 5,\r\n  animation: true,\r\n  skeletonMax: true,\r\n  deep: true,\r\n  appoint: 'wl-show'\r\n}\r\ninterface SkeletonType {\r\n  element: HTMLElement\r\n  title: string\r\n}\r\nexport default class Skeleton extends BaseModel<Required<SkeletonOptionsType>> {\r\n  skeleton: Array<SkeletonType>\r\n  colorFlow: number\r\n  state: number\r\n  WL_IMG: 'wl-img'\r\n  constructor(\r\n    w: number,\r\n    h: number,\r\n    canvas: HTMLCanvasElement,\r\n    options: Required<SkeletonOptionsType>,\r\n    store: ElementStoreType\r\n  ) {\r\n    super(w, h, canvas, options, store)\r\n    // 1.初始化options(防止属性为空)\r\n    this.initOptions(defaultOptions, [])\r\n    this.skeleton = []\r\n    this.colorFlow = 0\r\n    this.state = 1\r\n    this.WL_IMG = 'wl-img'\r\n    this.initPoint()\r\n    this.controller(this.store.element.children)\r\n    this.run(this.draw)\r\n    console.dir(store.element)\r\n  }\r\n  initPoint() {\r\n    let op = this.options\r\n    // 重新初始化画布\r\n    this.ctx.translate(-this.w / 2, -this.h / 2)\r\n    this.canvas.width = this.store.element.scrollWidth\r\n    this.canvas.height = this.store.element.scrollHeight\r\n    this.ctx.fillStyle = op.skeletonColor\r\n  }\r\n  draw() {\r\n    this.clearRect()\r\n    this.drawSkeleton()\r\n  }\r\n  controller(els: HTMLCollection) {\r\n    let op = this.options\r\n    for (let e of Array.from(els)) {\r\n      if (this.store.loadingId === e.id) continue\r\n      if (op.appoint.length > 0 && e.getAttribute(op.appoint) === null) continue\r\n      if (op.deep) {\r\n        if (e.children.length <= 0) {\r\n          this.skeleton.push({ title: e.nodeName, element: e as HTMLElement })\r\n        } else this.controller(e.children)\r\n      } else {\r\n        this.skeleton.push({ title: e.nodeName, element: e as HTMLElement })\r\n      }\r\n    }\r\n  }\r\n  drawSkeleton() {\r\n    let op = this.options\r\n    let linearGradient = this.ctx.createLinearGradient(0, 0, this.w, this.h)\r\n    linearGradient.addColorStop(0, op.skeletonColor)\r\n    linearGradient.addColorStop(this.colorFlow, op.skeletonAnimationColor)\r\n    linearGradient.addColorStop(1, op.skeletonColor)\r\n    if (op.animation) this.ctx.fillStyle = linearGradient\r\n    this.skeleton.forEach((s) => {\r\n      let el = s.element\r\n      // 处理圆角露出问题\r\n      this.drowRadiusRect(el.offsetLeft, el.offsetTop, el.offsetWidth, el.offsetHeight, op.radius)\r\n      this.ctx.fill()\r\n    })\r\n    if (op.animation) {\r\n      if (this.colorFlow >= 0.9) this.state = 2\r\n      if (this.colorFlow <= 0.1) this.state = 1\r\n      if (this.state === 1) this.colorFlow += 0.06\r\n      if (this.state === 2) this.colorFlow -= 0.06\r\n    }\r\n  }\r\n  // 绘制图片skeleton\r\n  // drawSkeletonImg(x: number, y: number, size: number) {\r\n  //     let op = this.options\r\n  //     this.ctx.save()\r\n  //     this.ctx.fillStyle = op.imgColor\r\n  //     this.ctx.strokeStyle = op.imgColor\r\n  //     this.ctx.beginPath()\r\n  //     this.ctx.lineWidth = 2.8\r\n  //     this.ctx.strokeRect(x, y, size, size)\r\n  //     this.ctx.closePath()\r\n\r\n  //     this.ctx.beginPath()\r\n  //     this.ctx.arc(x + size / 3.6, y + size / 3.6, size / 6, 0, Math.PI * 2)\r\n  //     this.ctx.fill()\r\n  //     this.ctx.closePath()\r\n\r\n  //     this.ctx.beginPath()\r\n  //     this.ctx.lineWidth = 2\r\n  //     this.ctx.moveTo(x, y + size)\r\n  //     this.ctx.lineTo(x + size / 4, y + size - size / 3)\r\n  //     this.ctx.lineTo(x + size / 2, y + size - size / 6)\r\n  //     this.ctx.lineTo(x + size / 1.5, y + size - size / 2)\r\n  //     this.ctx.lineTo(x + size, y + size)\r\n  //     this.ctx.stroke()\r\n  //     this.ctx.restore()\r\n  // }\r\n}\r\n", "// 动态引入会导致404\r\nimport Gear from './Gear'\r\nimport Zoom from './Zoom'\r\nimport Ring from './Ring'\r\nimport Bean from './Bean'\r\nimport Clock from './Clock'\r\nimport Pattern from './Pattern'\r\nimport Roll from './Roll'\r\nimport Img from './Img'\r\nimport Skeleton from './Skeleton'\r\nexport default { Gear, Zoom, Ring, Bean, Clock, Pattern, Roll, Img, Skeleton }\r\n", "import type { ElementStoreType, OptionsType } from '../types'\r\nimport { $Log } from '../utils'\r\nimport models from './model'\r\nexport default function drawController(\r\n  w: number,\r\n  h: number,\r\n  canvas: HTMLCanvasElement,\r\n  options: Required<OptionsType>,\r\n  store: ElementStoreType\r\n) {\r\n  try {\r\n    let model = null\r\n    if (!options.custom) model = new (models[options.model] as any)(w, h, canvas, options, store.element.$store)\r\n    else model = new options.custom(w, h, canvas, options, store.element.$store)\r\n    store.model = model\r\n  } catch (e) {\r\n    $Log.error('draw error(' + e + ')')\r\n  }\r\n}\r\n", "export default `\r\n@keyframes wl_show {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n`\r\n", "import type { ElementType, OptionsType } from '../types'\r\nimport { LOADING_TYPES, getDefOptions, clearAnimationFrame, $Log } from '../utils'\r\nimport MiniLoading from '../ExtendLoading/index'\r\nimport drawController from '../draw/index'\r\nimport style from './style'\r\nexport default class WebLoading {\r\n  // 动画canvas\r\n  canvas: HTMLCanvasElement\r\n  // 动画元素id\r\n  loadingId: string | null\r\n  // 动画元素\r\n  element: ElementType\r\n  // 配置options\r\n  options: Required<OptionsType>\r\n  // extendLoading\r\n  extendLoading: MiniLoading | undefined\r\n  constructor(element: HTMLElement, options?: OptionsType, extendLoading?: MiniLoading) {\r\n    // 初始化默认配置\r\n    this.options = Object.assign(getDefOptions(), options)\r\n    this.extendLoading = extendLoading\r\n    this.canvas = document.createElement('canvas')\r\n    this.loadingId = String('wl_' + Date.now())\r\n    this.element = element\r\n    // 初始化储存属性\r\n    this.initStore()\r\n    this.init()\r\n  }\r\n  resize() {\r\n    this.canvas.width = this.element.clientWidth\r\n    this.canvas.height = this.element.clientHeight\r\n    this.draw()\r\n  }\r\n  close() {\r\n    let op = this.options\r\n    this.clearStyle()\r\n    this.loadingId = null\r\n    if (!op.pointerEvents) {\r\n      if (op.type === LOADING_TYPES.DOM) this.element.style.pointerEvents = 'auto'\r\n      else document.body.style.pointerEvents = 'auto'\r\n    }\r\n    // 清空mini影响样式\r\n    if (op.type !== LOADING_TYPES.DOM) this.extendLoading?.clearStyle()\r\n    if (this.element.$store) {\r\n      // 清除model\r\n      this.element.$store.model = null\r\n      // 关闭前回调\r\n      this.element.$store.hookCall.beforeColse()\r\n    }\r\n    // 清空dom\r\n    setTimeout(() => {\r\n      // 停止 animationFrame\r\n      if (this.element.$store?.animationId) clearAnimationFrame(this.element.$store?.animationId)\r\n      // 如果是min，清空父元素(父元素是webLoading创建)\r\n      if (op.type !== LOADING_TYPES.DOM) this.extendLoading?.getElement().remove()\r\n      else this.canvas.remove()\r\n      // 关闭后回调\r\n      if (this.element.$store?.hookCall) this.element.$store.hookCall.colsed()\r\n    }, op.delayColse)\r\n  }\r\n\r\n  private init() {\r\n    // 初始化样式\r\n    this.initStyle()\r\n    // 默认启动\r\n    this.draw()\r\n  }\r\n  private clearStyle() {\r\n    // 先视觉过渡\r\n    this.canvas.style.opacity = '0'\r\n    this.canvas.style.zIndex = '-2001'\r\n  }\r\n  private initStyle() {\r\n    let op = this.options\r\n    // offset 含有scroll值的 显然client:内容+padding更合理\r\n    let elementW = this.element.clientWidth,\r\n      elementH = this.element.clientHeight,\r\n      readElementStyle = window.getComputedStyle(this.element),\r\n      elementStyle = this.element.style,\r\n      canvasStyle = this.canvas.style\r\n    // 初始化元素的样式\r\n    this.element.loadingId = this.loadingId\r\n    if (!op.pointerEvents) {\r\n      if (op.type === LOADING_TYPES.DOM) this.element.style.pointerEvents = 'none'\r\n      else document.body.style.pointerEvents = 'none'\r\n    }\r\n    if (!readElementStyle.position || readElementStyle.position === 'static') elementStyle.position = 'relative'\r\n    // 初始化canvas样式\r\n    this.canvas.id = this.loadingId!\r\n    document.styleSheets[0].insertRule(style)\r\n    this.canvas.style.animation = `wl_show ${op.delayColse / 1000}s linear`\r\n    canvasStyle.position = 'absolute'\r\n    canvasStyle.left = `${op.pointerEvents ? 0 : this.element.scrollLeft}px`\r\n    canvasStyle.top = `${op.pointerEvents ? 0 : this.element.scrollTop}px`\r\n    canvasStyle.zIndex = op.zIndex\r\n    canvasStyle.transition = `${op.delayColse / 1000}s`\r\n    canvasStyle.backgroundColor = op.bgColor\r\n    canvasStyle.borderRadius = readElementStyle.borderRadius\r\n    // 设置画布大小\r\n    this.canvas.width = elementW\r\n    this.canvas.height = elementH\r\n    // 注入\r\n    this.element.append(this.canvas)\r\n  }\r\n  private draw() {\r\n    let w = this.canvas.offsetWidth,\r\n      h = this.canvas.offsetHeight\r\n    if (this.element.$store) {\r\n      drawController(w, h, this.canvas, this.options, this.element.$store)\r\n    } else {\r\n      $Log.error('WebLoading:canvas or ctx null')\r\n    }\r\n  }\r\n  private initStore() {\r\n    // 储存状态\r\n    this.element.$store = {\r\n      options: this.options,\r\n      element: this.element,\r\n      animationId: undefined,\r\n      loadingId: this.loadingId,\r\n      model: null,\r\n      hookCall: {\r\n        beforeColse: () => {},\r\n        colsed: () => {}\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import WebLoading from './Webloading/index'\r\nimport type { OptionsType } from './types.d'\r\nimport { LOADING_TYPES } from './utils'\r\nexport default function loading(dom: HTMLElement, options?: OptionsType) {\r\n  // 默认调用\r\n  let webLoading = new WebLoading(dom, options)\r\n  const resize = () => {\r\n    webLoading.resize()\r\n  }\r\n  const reload = (options?: OptionsType) => {\r\n    // 保留上次传入参数\r\n    let op = Object.assign(webLoading.options, options)\r\n    // 防止重复注册\r\n    if (!webLoading.loadingId) {\r\n      if (op.type !== LOADING_TYPES.DOM) {\r\n        op = Object.assign(op)\r\n      }\r\n      webLoading = new WebLoading(dom, op)\r\n    }\r\n  }\r\n  const close = () => {\r\n    webLoading.close()\r\n  }\r\n  return {\r\n    reload,\r\n    resize,\r\n    close\r\n  }\r\n}\r\n"],
  "mappings": ";;;AA4BO,SAAS,gBAAuC;AACrD,SAAO;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,aAAa;AAAA,IACb,eAAe;AAAA,IACf,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AACF;AAWO,IAAM,OAAN,MAAW;AAAA,EAChB,OAAO,KAAK,SAAiB;AAC3B,SAAK,KAAK,SAAS,YAAc;AAAA,EACnC;AAAA,EACA,OAAO,KAAK,SAAiB;AAC3B,SAAK,KAAK,SAAS,YAAc;AAAA,EACnC;AAAA,EACA,OAAO,MAAM,SAAiB;AAC5B,SAAK,KAAK,SAAS,aAAe;AAAA,EACpC;AAAA,EACA,OAAO,KACL,SACA,OAAkB,cAClB,SAAwB;AAAA,IACtB,OAAO,cAAc,EAAE;AAAA,IACvB,SAAS,cAAc,EAAE;AAAA,EAC3B,GACA;AACA,QAAI,UAAU,OAAO;AAErB,QAAI,SAAS;AAAG,gBAAU;AAE1B,QAAI,SAAS;AAAG,gBAAU;AAC1B,QAAI,QAAQ;AAAA,mBACG;AAAA;AAAA,cAEL,OAAO;AAAA;AAEjB,YAAQ,IAAI,kBAAkB,YAAY,KAAK;AAAA,EACjD;AACF;AAMO,SAAS,OAAO,OAAuC;AAC5D,SAAO,UAAU,UAAa,UAAU;AAC1C;AAKO,SAAS,oBAAoB,IAAY;AAC9C,MAAI,CAAC,OAAO,uBAAuB;AACjC,WAAO,cAAc,EAAE;AAAA,EACzB,OAAO;AACL,WAAO,qBAAqB,EAAE;AAAA,EAChC;AACF;;;AC5GA,IAAqB,YAArB,MAAsD;AAAA,EASpD,YAAY,GAAW,GAAW,QAA2B,SAAY,OAAyB;AAChG,SAAK,IAAI;AACT,SAAK,IAAI;AACT,SAAK,SAAS;AAEd,SAAK,MAAM,OAAO,WAAW,IAAI;AACjC,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA,EAMA,YAAY,SAAYA,SAA2B;AAEjD,SAAK,UAAU,OAAO,OAAO,SAAS,KAAK,OAAO;AAClD,SAAK,MAAM,UAAU,KAAK;AAE1B,QAAIA,WAAUA,QAAO,QAAQ;AAC3B,MAAAA,QAAO,QAAQ,CAAC,MAAiB;AAC/B,YAAI,SAAS,KAAK,QAAQ,EAAE;AAC5B,YAAI,CAAC,OAAO,MAAM,KAAK,CAAC,EAAE,MAAM,MAAM;AAAG,eAAK,KAAK,EAAE,OAAO;AAAA,MAC9D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,cAAc;AACpB,SAAK,UAAU;AAEf,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,YAAY,GAAG;AACxB,SAAK,IAAI,cAAc,GAAG;AAC1B,SAAK,IAAI,cAAc,GAAG;AAC1B,SAAK,IAAI,OAAO,GAAG,GAAG,cAAc,GAAG;AACvC,SAAK,IAAI,YAAY;AACrB,SAAK,IAAI,eAAe;AACxB,SAAK,IAAI,UAAU,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC;AACzC,SAAK,IAAI,KAAK;AAAA,EAChB;AAAA,EAEA,UAAU,GAAY,GAAY,KAAc,GAAY;AAE1D,QAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG;AAC1D,WAAK,IAAI,UAAU,GAAG,GAAG,KAAK,CAAC;AAAA,IACjC,WAES,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,OAAO,CAAC,GAAG;AAC9D,UAAI,YAAY,MAAM,KAAK;AAC3B,UAAI,aAAa,KAAK,KAAK,MAAM,MAAM,YAAY,SAAS;AAC5D,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,UAAI,SAAS,IAAI;AACjB,UAAI,UAAU,IAAI;AAClB,UAAI,KAAK,aAAa,KAAK;AACzB,aAAK,IAAI,UAAU,MAAM,MAAM,QAAQ,OAAO;AAC9C,aAAK,aAAa;AAClB,aAAK,UAAU,GAAG,GAAG,GAAG;AAAA,MAC1B,OAAO;AACL,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AAAO,WAAK,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC;AAAA,EACpE;AAAA,EASA,eAAe,GAAW,GAAW,GAAW,GAAW,GAAW;AACpE,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE;AACxD,SAAK,IAAI,OAAO,IAAI,IAAI,GAAG,CAAC;AAC5B,SAAK,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,KAAK,IAAI,CAAC;AAClD,SAAK,IAAI,OAAO,IAAI,GAAG,IAAI,IAAI,CAAC;AAChC,SAAK,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,MAAM,KAAK,EAAE;AACtD,SAAK,IAAI,OAAO,IAAI,GAAG,IAAI,CAAC;AAC5B,SAAK,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,MAAM,KAAK,IAAI,KAAK,EAAE;AACxD,SAAK,IAAI,OAAO,GAAG,IAAI,CAAC;AACxB,SAAK,IAAI,UAAU;AAAA,EACrB;AAAA,EAEA,IAAI,KAAe;AAEjB,QAAI,KAAK,MAAM;AAAa,WAAK,oBAAoB,KAAK,MAAM,WAAW;AAC3E,SAAK,eAAe,GAAG;AAAA,EACzB;AAAA,EAMA,eAAe,KAAe;AAE5B,QAAI,CAAC,OAAO,uBAAuB;AACjC,WAAK,MAAM,cAAc,OAAO,YAAY,KAAK,KAAK,QAAQ,KAAK;AAAA,IACrE;AAEA,QAAI,UAAU,KAAK,IAAI,IAAI,KAAK,QAAQ;AACxC,QAAI,KAAK,IAAI;AACb,UAAM,MAAM,MAAM;AAChB,UAAI,KAAK,IAAI,IAAI,SAAS;AACxB,YAAI,KAAK,IAAI;AACb,kBAAU,KAAK,IAAI,IAAI,KAAK,QAAQ;AAAA,MACtC;AACA,WAAK,MAAM,cAAc,OAAO,sBAAsB,GAAG;AAAA,IAC3D;AACA,SAAK,MAAM,cAAc,OAAO,sBAAsB,GAAG;AAAA,EAC3D;AAAA,EAKA,oBAAoB,IAAY;AAC9B,wBAAoB,EAAE;AAAA,EACxB;AACF;;;AC/HA,IAAM,iBAA4C;AAAA,EAChD,GAAG,cAAc;AAAA,EACjB,eAAe;AAAA,EACf,WAAW;AAAA,EACX,aAAa;AAAA,EACb,SAAS;AAAA,EACT,WAAW;AAAA,EACX,SAAS;AAAA,EACT,SAAS;AAAA,EACT,WAAW;AACb;AAEA,IAAM,SAAS;AAAA,EACb;AAAA,IACE,KAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO,CAAC,QAAa;AACnB,aAAO,OAAO,KAAK,OAAO;AAAA,IAC5B;AAAA,EACF;AACF;AACA,IAAqB,OAArB,cAAkC,UAAqC;AAAA,EAErE,YACE,GACA,GACA,QACA,SACA,OACA;AACA,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAY,gBAAgB,MAAM;AAEvC,SAAK,aAAa,KAAK,QAAQ,UAAU,KAAK,QAAQ,OAAO;AAE7D,SAAK,UAAU;AAEf,SAAK,MAAM,MAAM,KAAK,EAAE,QAAQ,KAAK,QAAQ,QAAQ,GAAG,CAAC,GAAG,WAAW,MAAM;AAC7E,SAAK,IAAI,KAAK,IAAI;AAAA,EACpB;AAAA,EACA,YAAY;AACV,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,UAAU,GAAG;AACtB,SAAK,IAAI,YAAY,GAAG;AACxB,SAAK,IAAI,KAAK;AAAA,EAChB;AAAA,EACA,OAAO;AACL,SAAK,UAAU;AAEf,SAAK,WAAW;AAEhB,SAAK,SAAS;AAEd,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,aAAa;AACX,QAAI,KAAK,KAAK;AACd,QAAI,GAAG;AAAW,WAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAO,IAAI,KAAK,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,CAAE;AAAA;AACtF,WAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAO,IAAI,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,CAAE;AAAA,EAC3E;AAAA,EACA,WAAW;AACT,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AAEd,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AAEzB,aAAS,IAAI,GAAG,IAAI,KAAK,IAAI,QAAQ,KAAK;AACxC,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,cAAc,KAAK,IAAI,KAAK;AACrC,WAAK,IAAI,OAAO,GAAG,aAAa,GAAG,SAAS;AAC5C,WAAK,IAAI,OAAO,GAAG,eAAe,GAAG,OAAO;AAC5C,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,OAAQ,IAAI,KAAK,KAAM,GAAG,OAAO;AAAA,IAC5C;AACA,SAAK,IAAI,QAAQ;AAAA,EACnB;AAAA,EACA,WAAW;AACT,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AAEnB,QAAI,IAAI,GAAG,UAAU,GAAG,WAAW,GAAG;AACtC,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACnB;AAAA,EAKA,aAAa,OAAe;AAE1B,QAAI,KAAK,QAAQ,cAAc;AAE7B,UAAI,QAAQ,IAAI,KAAK,GAAG;AACtB,aAAK,QAAQ,YAAY,KAAK,IAAI,IAAI;AACtC,aAAK,QAAQ,UAAU,KAAK,IAAI;AAChC,aAAK,QAAQ,UAAU;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AACF;;;ACxGA,IAAMC,kBAA4C;AAAA,EAC9C,GAAG,cAAc;AAAA,EACjB,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,SAAS;AAAA,EACT;AAAA,EACA,WAAW;AAAA,EACX,YAAY,CAAC;AACjB;AAMA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAa,SAAS;AAAA,EAAiD,OAAO,CAAC,QAAa;AAC7F,WAAOD,gBAAe,aAAaA,gBAAe;AAAA,EACtD;AACJ,GAAG;AAAA,EACC,KAAK;AAAA,EAAW,SAAS;AAAA,EAAiD,OAAO,CAAC,QAAa;AAC3F,WAAOA,gBAAe,aAAaA,gBAAe;AAAA,EACtD;AACJ,CAAC;AACD,IAAqB,OAArB,cAAkC,UAAqC;AAAA,EAGnE,YAAY,GAAW,GAAW,QAA2B,SAAoC,OAAyB;AACtH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAClC,SAAK,YAAYA,gBAAe,YAAY,IAAIA,gBAAe,UAAU;AAEzE,SAAK,YAAYA,iBAAgBC,OAAM;AAEvC,SAAK,UAAU;AAEf,SAAK,OAAO,MAAM,KAAK,EAAE,QAAQ,KAAK,QAAQ,QAAQ,GAAG,CAAC,GAAG,WAAW,OAAO,OAAO;AAAA,MAClF,OAAOD,gBAAe;AAAA,MAEtB,OAAO;AAAA,IACX,CAAC,CAAC;AACF,SAAK,IAAI,KAAK,IAAI;AAAA,EACtB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,UAAU,GAAG;AACtB,SAAK,IAAI,YAAY,GAAG;AAExB,SAAK,IAAI;AAAA,MAAU,EAAI,GAAG,aAAc,GAAG,UAAU,KAAO,GAAG,WAAW,GAAG,UAAU,MAAO;AAAA,MAC1F,CAAE,GAAG,aAAc;AAAA,IAAC;AACxB,SAAK,IAAI,KAAK;AAAA,EAElB;AAAA,EACA,OAAO;AACH,SAAK,UAAU;AAEf,SAAK,SAAS;AAEd,SAAK,SAAS;AAEd,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,aAAa;AACT,QAAI,KAAK,KAAK;AACd,QAAI,GAAG,aAAa,KAAK,aAAa,GAAG;AAAS,WAAK,YAAY;AAAA,aAC1D,GAAG,aAAa,KAAK,YAAY;AAAG,WAAK,YAAY,GAAG,UAAU;AAAA,EAC/E;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,aAAS,IAAI,GAAG,IAAI,GAAG,SAAS,KAAK;AAEjC,UAAI,KAAK,KAAK,GAAG,UAAU;AAAG,aAAK,KAAK,GAAG,SAAS;AAAA,eAC3C,KAAK,KAAK,GAAG,UAAU,KAAK,KAAK,KAAK,GAAG,SAAS,GAAG;AAAW,aAAK,KAAK,GAAG;AACtF,UAAI,GAAG;AAA8B,aAAK,IAAI,YAAY,KAAK,KAAK,GAAG;AAEvE,UAAI,MAAM,KAAK,WAAW;AACtB,YAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,SAAS;AACjC,eAAK,KAAK,GAAG,QAAQ;AACrB,aAAG,YAAY,KAAK,cAAc,KAAK,YAAY,KAAK,IAAI,KAAK,cAAc,KAAK,YAAY,GAAG,UAAU;AAAA,QACjH;AACA,YAAI,KAAK,KAAK,GAAG,SAAS,GAAG;AAAW,eAAK,KAAK,GAAG,QAAQ;AAAA,MACjE;AAEA,WAAK,IAAI,UAAU;AACnB,UAAI,GAAG,WAAW,SAAS,KAAK,GAAG,WAAW;AAAI,aAAK,IAAI,cAAc,GAAG,WAAW;AAAA;AAClF,aAAK,IAAI,cAAc,GAAG;AAC/B,UAAI,KAAK,GAAG,KAAK,GAAG;AACpB,UAAI,GAAG,oCAAiC,GAAG,8BAA6B;AACpE,aAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB;AACA,UAAI,GAAG,8BAA6B;AAChC,aAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB;AACA,WAAK,IAAI,QAAQ,IAAI,MAAM,GAAG,YAAY,GAAG,UAAU,EAAE;AACzD,WAAK,IAAI,QAAQ,IAAI,MAAM,GAAG,YAAY,GAAG,UAAU,EAAE;AACzD,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,QAAI,IAAI,GAAG,WAAW,GAAG;AACzB,SAAK,IAAI,SAAS,GAAG,OAAS,GAAG,aAAc,GAAG,UAAU,KAAO,GAAG,WAAW,GAAG,UAAU,MAAO,GAAG,CAAC;AACzG,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AACJ;;;AC9GA,IAAME,kBAA4C;AAAA,EAC9C,GAAG,cAAc;AAAA,EACjB,QAAQ,KAAK,KAAK;AAAA,EAClB,SAAS;AAAA,EACT,WAAW;AAAA,EACX,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,WAAW,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC;AAAA,EAChC,WAAW;AACf;AAEA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAW,SAAS;AAAA,EAAsB,OAAO,CAAC,QAAa;AAChE,WAAO,OAAO,KAAK,OAAO;AAAA,EAC9B;AACJ,GAAG;AAAA,EACC,KAAK;AAAA,EAAa,SAAS,kBAAkBD,gBAAe;AAAA,EAAW,OAAO,CAAC,QAAa;AACxF,WAAO,IAAI,UAAUA,gBAAe;AAAA,EACxC;AACJ,CAAC;AACD,IAAqB,OAArB,cAAkC,UAAqC;AAAA,EAEnE,YAAY,GAAW,GAAW,QAA2B,SAAoC,OAAyB;AACtH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAClC,SAAK,SAAS;AAEd,SAAK,YAAYA,iBAAgBC,OAAM;AAEvC,SAAK,UAAU;AAEf,SAAK,IAAI,KAAK,IAAI;AAAA,EACtB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,UAAU,GAAG;AACtB,SAAK,IAAI,YAAY,GAAG;AACxB,SAAK,IAAI,KAAK;AAAA,EAClB;AAAA,EACA,OAAO;AACH,SAAK,UAAU;AAEf,SAAK,WAAW;AAEhB,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,aAAa;AACT,SAAK,IAAI,KAAK;AACd,QAAI,KAAK,KAAK;AACd,QAAI,SAAS,KAAK,SAAS,KAAK,KAAK,OAAO,GAAG,YAAY,IAAI;AAC/D,SAAK,IAAI,OAAO,MAAM;AAEtB,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AACzB,aAAS,IAAI,GAAG,KAAK,GAAG,SAAS,KAAK;AAClC,WAAK,SAAS,GAAG,UAAW,IAAI,KAAK,GAAG,SAAU,GAAG,QAAQ,GAAG,aAAa,GAAG,UAAU,SAAS,IAAI,GAAG,UAAU,IAAI,KAAK,KAAK,KAAK,CAAC;AAAA,IAC5I;AACA,SAAK,UAAU,GAAG;AAClB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AAEnB,QAAI,IAAI,GAAG,WAAW,GAAG,SAAS,GAAG,WAAW,GAAG;AACnD,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,SAAS,GAAW,SAAiB,GAAG,QAAgB,GAAG;AAEvD,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,SAAS,OAAO,KAAK,KAAK,KAAK;AACrD,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAEnB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,KAAK,SAAS,OAAO,KAAK;AACrD,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAAA,EACvB;AACJ;;;ACpFA,IAAMC,kBAA4C;AAAA,EAC9C,GAAG,cAAc;AAAA,EACjB,UAAU;AAAA,EACV,aAAa;AACjB;AAEA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAe,SAAS;AAAA,EAA0B,OAAO,CAAC,QAAa;AACxE,WAAO,OAAO;AAAA,EAClB;AACJ,GAAG;AAAA,EACC,KAAK;AAAA,EAAY,SAAS;AAAA,EAAuB,OAAO,CAAC,QAAa;AAClE,WAAO,OAAO;AAAA,EAClB;AACJ,CAAC;AASD,IAAqB,OAArB,cAAkC,UAAqC;AAAA,EAEnE,YAAY,GAAW,GAAW,QAA2B,SAAoC,OAAyB;AACtH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYD,iBAAgBC,OAAM;AACvC,SAAK,OAAO;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,MAAM,EAAE,KAAK,QAAQ,cAAc,KAAK,QAAQ,YAAY,IAAI,KAAK,QAAQ,WAAW;AAAA,MACxF,OAAO,MAAM,KAAK,EAAE,QAAQ,KAAK,QAAQ,YAAY,GAAG,MAAM,CAAC;AAAA,MAC/D,gBAAgB;AAAA,IACpB;AACA,SAAK,IAAI,KAAK,IAAI;AAAA,EAEtB;AAAA,EACA,OAAO;AACH,QAAI,KAAK,KAAK;AACd,SAAK,UAAU;AACf,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,UAAU,KAAK,KAAK,MAAM,CAAC;AACpC,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,WAAW,MAAM,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI;AAC5G,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAEjB,SAAK,UAAU;AAEf,SAAK,YAAY;AAEjB,SAAK,SAAS;AAEd,SAAK,WAAW;AAAA,EAEpB;AAAA,EACA,aAAa;AACT,QAAI,KAAK,KAAK;AACd,QAAI,KAAK,KAAK,QAAS,GAAG,cAAc,GAAG,WAAY,IAAI,GAAG,WAAW,GAAG;AACxE,WAAK,KAAK,OAAO,EAAE,GAAG,cAAc,GAAG,YAAY,IAAI,GAAG,WAAW;AACrE,WAAK,KAAK,iBAAiB;AAAA,IAC/B;AACA,QAAI,KAAK,KAAK,QAAQ,EAAE,GAAG,cAAc,GAAG,YAAY,GAAG;AACvD,WAAK,KAAK,YAAY;AAAA,IAC1B;AACA,QAAI,KAAK,KAAK,QAAQ;AAAG,WAAK,KAAK,QAAQ;AAC3C,QAAI,KAAK,KAAK,QAAQ;AAAI,WAAK,KAAK,QAAQ;AAC5C,QAAI,KAAK,KAAK,UAAU;AAAG,WAAK,KAAK,QAAQ;AAC7C,QAAI,KAAK,KAAK,UAAU;AAAG,WAAK,KAAK,QAAQ;AAC7C,QAAI,KAAK,KAAK,cAAc;AAAG,WAAK,KAAK,QAAQ,GAAG,WAAW;AAC/D,QAAI,KAAK,KAAK,cAAc;AAAG,WAAK,KAAK,QAAQ,GAAG,WAAW;AAAA,EACnE;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,EAAE,GAAG,cAAc,GAAG,YAAY,GAAG,CAAC;AACzD,aAAS,IAAI,GAAG,IAAI,GAAG,eAAe,IAAI,KAAK,KAAK,gBAAgB,KAAK;AACrE,WAAK,IAAI,UAAU;AACnB,UAAI,IAAI,KAAK,KAAK;AAAgB,aAAK,IAAI,IAAI,GAAG,WAAW,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,KAAK,KAAK,CAAC;AAClG,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU;AAAA,IACvB;AACA,SAAK,KAAK;AACV,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EAEA,cAAc;AACV,QAAI,KAAK,KAAK;AAEd,SAAK,UAAU,CAAC,GAAG,WAAW,IAAI,KAAK,KAAK,MAAM,CAAC,GAAG,WAAW,GAAG,GAAG,WAAW,CAAC;AAEnF,SAAK,UAAU,EAAE,GAAG,cAAc,GAAG,YAAY,IAAI,GAAG,WAAW,GAAG,CAAC,KAAK,GAAG,KAAK,KAAK,OAAQ,GAAG,cAAc,GAAG,WAAY,IAAI,GAAG,WAAW,GAAG,KAAK,IAAI,CAAC;AAEhK,SAAK,UAAU,EAAE,GAAG,cAAc,GAAG,YAAY,GAAG,CAAC,KAAK,GAAG,MAAM,KAAK,IAAI,CAAC;AAE7E,SAAK,UAAW,GAAG,cAAc,GAAG,WAAY,GAAG,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI,CAAC;AAAA,EAC/E;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AAAA,EAC7B;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,QAAI,IAAI,GAAG,WAAW,GAAG,UAAU,GAAG;AACtC,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAEJ;;;ACvHA,IAAMC,kBAA6C;AAAA,EAC/C,GAAG,cAAc;AAAA,EACjB,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY,CAAC,WAAW,WAAW,SAAS;AAAA,EAC5C,WAAW;AAAA,EACX,UAAU;AAAA,EACV,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AACd;AAEA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAc,SAAS;AAAA,EAA0B,OAAO,CAAC,QAAa;AACvE,WAAO,IAAI,UAAU;AAAA,EACzB;AACJ,CAAC;AACD,IAAqB,QAArB,cAAmC,UAAsC;AAAA,EAIrE,YAAY,GAAW,GAAW,QAA2B,SAAqC,OAAyB;AACvH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYD,iBAAgBC,OAAM;AAEvC,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,IAAI,KAAK,IAAI;AAAA,EACtB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,UAAU,GAAG;AACtB,SAAK,IAAI,YAAY,GAAG;AACxB,SAAK,IAAI,KAAK;AAAA,EAClB;AAAA,EACA,OAAO;AACH,SAAK,UAAU;AAEf,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,SAAS,GAAW,GAAW,GAAW;AACtC,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,QAAI,IAAI,GAAG,YAAY,IAAI,GAAG;AAC9B,QAAI,GAAG,aAAa;AAAQ,SAAG,OAAO,GAAG,OAAO,OAAO;AACvD,QAAI,GAAG,aAAa;AAAK,SAAG,OAAO,KAAK,UAAU;AAClD,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,QAAI,IAAI,IAAI,KAAK,EAAE,WAAW;AAC9B,QAAI,IAAI,IAAI,KAAK,EAAE,WAAW;AAC9B,QAAI,IAAI,IAAI,KAAK,EAAE,SAAS;AAE5B,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,OAAO,IAAI,EAAE,GAAG,YAAY,GAAG,SAAS;AACjD,SAAK,IAAI,OAAO,GAAG,EAAE,GAAG,YAAY,GAAG,SAAS;AAChD,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAEnB,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,KAAK,KAAK,CAAC;AAC/C,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAEjB,SAAK,IAAI,KAAK;AACd,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,OAAQ,MAAM,KAAM,KAAK,KAAK,GAAG;AAC1C,WAAK,IAAI,OAAO,GAAG,YAAY,GAAG,UAAU,CAAC;AAC7C,WAAK,IAAI,OAAO,GAAG,YAAY,GAAG,UAAU,CAAC;AAC7C,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AAAA,IACvB;AACA,SAAK,IAAI,QAAQ;AAEjB,QAAI,GAAG,OAAO;AACV,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,YAAY,GAAG,YAAY;AACpC,UAAI,GAAG,WAAW;AAAI,aAAK,IAAI,cAAc,GAAG,WAAW;AAE3D,WAAK,IAAI,OAAQ,MAAM,KAAK,KAAM,GAAG;AACrC,WAAK,IAAI,OAAS,IAAI,MAAM,KAAM,KAAK,KAAM,GAAG;AAChD,WAAK,IAAI,OAAO,IAAI,CAAC;AACrB,WAAK,IAAI,OAAO,GAAG,YAAY,GAAG,CAAC;AACnC,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,QAAQ;AAAA,IACrB;AAEA,QAAI,GAAG,OAAO;AACV,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU;AACnB,UAAI,GAAG,WAAW;AAAI,aAAK,IAAI,cAAc,GAAG,WAAW;AAC3D,WAAK,IAAI,YAAY,GAAG,YAAY;AAEpC,WAAK,IAAI,OAAQ,MAAM,KAAK,KAAM,GAAG;AACrC,WAAK,IAAI,OAAS,IAAI,MAAM,KAAM,KAAK,KAAM,GAAG;AAChD,WAAK,IAAI,OAAO,IAAI,CAAC;AACrB,WAAK,IAAI,OAAO,GAAG,YAAY,IAAI,GAAG,UAAU,CAAC;AACjD,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,QAAQ;AAAA,IACrB;AAEA,QAAI,GAAG,OAAO;AACV,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU;AACnB,UAAI,GAAG,WAAW;AAAI,aAAK,IAAI,cAAc,GAAG,WAAW;AAE3D,WAAK,IAAI,OAAQ,MAAM,KAAK,KAAM,GAAG;AACrC,WAAK,IAAI,OAAS,IAAI,MAAM,KAAM,KAAK,KAAM,GAAG;AAChD,WAAK,IAAI,OAAO,IAAI,CAAC;AACrB,WAAK,IAAI,OAAO,GAAG,YAAY,GAAG,UAAU,CAAC;AAC7C,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,QAAQ;AACjB,UAAI,KAAK,SAAS;AAAG,aAAK;AAC1B,WAAK,OAAO;AAAA,IAChB;AAEA,SAAK,SAAS,GAAG,GAAG,CAAC;AAAA,EAEzB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AAAA,EAC7B;AAEJ;;;AC7IA,IAAMC,kBAA+C;AAAA,EACjD,GAAG,cAAc;AAAA,EACjB,QAAQ,4GAA0G;AAAA,EAClH,aAAa,CAAC,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,EACnE,WAAW;AAAA,EACX,WAAW;AACf;AAEA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAa,SAAS;AAAA,EAAwB,OAAO,CAAC,QAAa;AACpE,WAAO,OAAO,KAAK,OAAO;AAAA,EAC9B;AACJ,GAAG;AAAA,EACC,KAAK;AAAA,EAAS,SAAS;AAAA,EAAoC,OAAO,CAAC,QAAa;AAC5E,WAAO,QAAQ,cAAc,EAAE;AAAA,EACnC;AACJ,CAAC;AAeD,IAAqB,UAArB,cAAqC,UAAwC;AAAA,EAEzE,YAAY,GAAW,GAAW,QAA2B,SAAuC,OAAyB;AACzH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYD,iBAAgBC,OAAM;AAEvC,SAAK,UAAU;AACf,SAAK,UAAU,EAAE,OAAO,cAAc,EAAE,YAAY,WAAW,IAAI,0BAA2B,QAAQ,GAAG,WAAW,GAAG,MAAM,EAAE;AAC/H,SAAK,IAAI,KAAK,IAAI;AAAA,EACtB;AAAA,EACA,YAAY;AAER,SAAK,QAAQ,QAAQ;AAAA,EACzB;AAAA,EACA,OAAO;AACH,QAAI,KAAK,KAAK;AACd,SAAK,UAAU;AACf,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,UAAU,GAAG,KAAK,QAAQ,SAAS;AAC5C,SAAK,IAAI,OAAO,KAAK,QAAQ,OAAO,KAAK,KAAK,CAAC;AAC/C,SAAK,IAAI,YAAY,KAAK,QAAQ;AAClC,SAAK,YAAY,GAAG,GAAG,GAAG,SAAS;AACnC,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AACjB,SAAK,WAAW;AAEhB,SAAK,UAAU,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC;AAE7C,SAAK,WAAW,EAAE;AAElB,SAAK,SAAS,EAAE;AAAA,EAEpB;AAAA,EACA,WAAW,IAAkC;AACzC,SAAK,QAAQ,QAAQ;AAErB,QAAI,KAAK,QAAQ,cAAc,GAAG;AAC9B,WAAK,QAAQ;AACb,WAAK,QAAQ,UAAU;AAAA,IAC3B,WACS,KAAK,QAAQ,cAAc,GAAG;AACnC,WAAK,QAAQ;AACb,WAAK,QAAQ,UAAU;AAAA,IAC3B;AAEA,QAAI,KAAK,QAAQ,aAAa,CAAC,GAAG,aAAa,KAAK,QAAQ,YAAY,KAAK,GAAG;AAC5E,SAAG;AAAA,IACP;AAEA,QAAI,KAAK,QAAQ,aAAa,CAAC,GAAG,WAAW;AACzC,WAAK,QAAQ,YAAY;AAAA,IAE7B,WACS,KAAK,QAAQ,aAAa,GAAG,WAAW;AAC7C,WAAK,QAAQ,YAAY;AACzB,SAAG,QAAQ;AAEX,WAAK,QAAQ,QAAQ,GAAG,OAAO,SAAS,OAAO,KAAK,OAAO,IAAI,GAAG,OAAO,MAAM,CAAC;AAEhF,WAAK,QAAQ,QAAQ,GAAG,YAAY,SAAS,OAAO,KAAK,OAAO,IAAI,GAAG,YAAY,MAAM,CAAC;AAAA,IAC9F;AAAA,EACJ;AAAA,EACA,YAAY,GAAW,GAAW,MAAc;AAC5C,YAAQ,KAAK,QAAQ,OAAO;AAAA,MACxB;AACI,aAAK,SAAS,GAAG,GAAG,IAAI;AACxB;AAAA,MACJ;AACI,aAAK,QAAQ,GAAG,GAAG,IAAI;AACvB;AAAA,MACJ;AACI,aAAK,aAAa,GAAG,GAAG,IAAI;AAC5B;AAAA,MACJ;AACI,aAAK,UAAU,GAAG,GAAG,IAAI;AACzB;AAAA,MACJ;AACI,aAAK,YAAY,GAAG,GAAG,IAAI;AAC3B;AAAA,IACR;AAAA,EACJ;AAAA,EACA,SAAS,IAAkC;AAEvC,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,YAAY,KAAK,QAAQ;AAClC,QAAI,IAAI,GAAG,WAAW,GAAG;AACzB,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,aAAa;AAET,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,cAAc;AACvB,SAAK,IAAI,cAAc,KAAK,QAAQ;AACpC,SAAK,IAAI,OAAO,CAAC,KAAK,QAAQ,SAAS,GAAG,CAAC;AAC3C,SAAK,IAAI,OAAO,KAAK,QAAQ,QAAQ,CAAC;AACtC,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,SAAS,GAAW,GAAW,MAAc;AACzC,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC;AACvC,SAAK,IAAI,SAAS,GAAG,GAAG,MAAM,IAAI;AAClC,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,QAAQ,GAAW,GAAW,MAAc;AACxC,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,IAAI,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,KAAK,CAAC;AAC3C,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,aAAa,GAAW,GAAW,MAAc;AAC7C,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,CAAC,OAAO,GAAG,EAAE,OAAO,IAAI,KAAK,KAAK,CAAC,KAAK,CAAC;AAC5D,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,OAAO,MAAM,CAAC;AACvB,SAAK,IAAI,OAAO,OAAO,GAAG,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC;AACjD,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,UAAU,GAAW,GAAW,MAAc;AAC1C,WAAO,OAAO;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,GAAG,EAAE,OAAO,KAAK,CAAC;AACrC,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,cAAc,OAAO,GAAG,CAAC,MAAM,OAAO,GAAG,CAAC,OAAO,GAAG,GAAG,OAAO,CAAC;AACxE,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,cAAc,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,OAAO,GAAG,GAAG,OAAO,CAAC;AAC1E,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,YAAY,GAAW,GAAW,MAAc;AAC5C,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC;AACvC,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,OAAO,MAAM,CAAC;AACvB,SAAK,IAAI,OAAO,OAAO,OAAO,GAAG,OAAO,CAAC;AACzC,SAAK,IAAI,OAAO,MAAM,OAAO,IAAI,OAAO,CAAC;AACzC,SAAK,IAAI,OAAO,GAAG,IAAI;AACvB,SAAK,IAAI,OAAO,IAAI,OAAO,GAAG,OAAO,OAAO,CAAC;AAC7C,SAAK,IAAI,OAAO,GAAG,CAAC;AACpB,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EAEA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AAAA,EAC7B;AACJ;;;AC7MA,IAAMC,kBAA4C;AAAA,EAC9C,GAAG,cAAc;AAAA,EACjB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW;AAAA,EACX;AAAA,EACA,WAAW,CAAC,WAAW,WAAW,WAAW,SAAS;AAAA,EACtD,oBAAoB;AAAA,EACpB,OAAO;AACX;AAEA,IAAMC,UAAS,CAAC;AAAA,EACZ,KAAK;AAAA,EAAY,SAAS;AAAA,EAAwB,OAAO,CAAC,QAAa;AACnE,WAAO,OAAO,KAAK,OAAO;AAAA,EAC9B;AACJ,GAAG;AAAA,EACC,KAAK;AAAA,EAAS,SAAS;AAAA,EAAiC,OAAO,CAAC,QAAa;AACzE,WAAO,QAAQ,cAAc,EAAE;AAAA,EACnC;AACJ,CAAC;AAWD,IAAqB,OAArB,cAAkC,UAAqC;AAAA,EAEnE,YAAY,GAAW,GAAW,QAA2B,SAAoC,OAAyB;AACtH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYD,iBAAgBC,OAAM;AAEvC,SAAK,OAAO;AAAA,MACR,MAAM;AAAA,MACN,MAAM,KAAK,QAAQ,QAAQ,IAAK,KAAK,QAAQ,WAAW,KAAM,KAAK,QAAQ,WAAW,KAAK,QAAQ,WAAW,KAAK,QAAQ,UAAU;AAAA,MACrI,OAAO;AAAA,MACP,OAAO,CAAC;AAAA,IACZ;AACA,SAAK,IAAI,KAAK,IAAI;AAAA,EACtB;AAAA,EACA,OAAO;AACH,SAAK,UAAU;AAEf,SAAK,WAAW;AAEhB,SAAK,UAAU;AACf,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,UAAU,CAAC,KAAK,KAAK,MAAM,CAAC;AACrC,SAAK,IAAI,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,GAAG;AAE9C,SAAK,YAAY;AAEjB,SAAK,WAAW;AAChB,SAAK,IAAI,QAAQ;AAEjB,SAAK,SAAS;AAAA,EAElB;AAAA,EACA,cAAc;AACV,QAAI,KAAK,KAAK;AACd,YAAQ,GAAG,OAAO;AAAA,MACd;AACI,aAAK,SAAS;AACd;AAAA,MACJ;AACI,aAAK,UAAU;AACf;AAAA,MACJ;AACI,aAAK,aAAa;AAClB;AAAA,IACR;AAAA,EACJ;AAAA,EACA,aAAa;AACT,QAAI,KAAK,KAAK;AACd,QAAI,KAAK,KAAK,UAAU,GAAG;AACvB,WAAK,KAAK,QAAQ;AAClB,UAAI,GAAG,QAAQ,MAAM,CAAC,GAAG;AAAO,WAAG,SAAS;AAAA,IAChD;AACA,QAAI,KAAK,KAAK,UAAU,GAAG;AACvB,WAAK,KAAK,QAAQ;AAClB,UAAI,GAAG,QAAQ,MAAM,CAAC,GAAG;AAAO,WAAG,SAAS;AAAA,IAChD;AACA,QAAI,GAAG;AAAO;AACd,QAAI,KAAK,KAAK,QAAQ,EAAE,GAAG,WAAW,MAAM,GAAG,WAAW,GAAG,UAAU;AAAM,WAAK,KAAK,QAAQ;AAC/F,QAAI,KAAK,KAAK,QAAS,GAAG,WAAW,KAAM,GAAG,WAAW,GAAG,WAAW,GAAG,UAAU;AAAG,WAAK,KAAK,QAAQ;AACzG,QAAI,KAAK,KAAK,UAAU;AAAG,WAAK,KAAK;AACrC,QAAI,KAAK,KAAK,UAAU;AAAG,WAAK,KAAK;AAGrC,QAAI,QAAQ,KAAK,KAAK;AACtB,QAAI,KAAK,KAAK,QAAQ,GAAG,WAAW,GAAG,YAAY,KAAK,KAAK,KAAK,UAAU,GAAG;AAC3E,YAAM,KAAK,EAAE,MAAM,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,KAAK,CAAC;AAAA,IAC1D;AACA,QAAI,KAAK,KAAK,UAAU,KAAK,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,SAAS,GAAG,MAAM,KAAK,KAAK,MAAM;AAClG,WAAK,KAAK,MAAM,IAAI;AAAA,IACxB;AAAA,EACJ;AAAA,EAEA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,UAAU;AACf,SAAK,IAAI,UAAU,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC;AACrD,SAAK,IAAI,SAAS,GAAG,GAAG,GAAG,UAAU,GAAG,QAAQ;AAChD,SAAK,IAAI,QAAQ;AAAA,EAErB;AAAA,EAEA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,YAAY;AAErB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,KAAK,KAAK,CAAC;AAClD,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAEnB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,KAAK,KAAK,CAAC;AAClD,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAEnB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,UAAU,GAAG,KAAK,KAAK,CAAC;AAC9C,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AAEnB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,OAAO,GAAG,GAAG,WAAW,CAAC;AAClC,WAAK,IAAI,OAAO,GAAG,GAAG,QAAQ;AAC9B,WAAK,IAAI,OAAO;AAChB,WAAK,IAAI,OAAQ,MAAM,IAAK,KAAK,KAAK,GAAG;AACzC,WAAK,IAAI,UAAU;AAAA,IACvB;AACA,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EAEA,eAAe;AACX,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,aAAS,IAAI,GAAG,IAAI,GAAG,UAAU,QAAQ,KAAK;AAC1C,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,YAAY,GAAG,UAAU;AAClC,WAAK,IAAI,IAAI,CAAC,GAAG,WAAW,GAAG,GAAG,GAAG,UAAU,GAAG,KAAK,EAAE;AACzD,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU;AACnB,WAAK,IAAI,OAAQ,MAAM,IAAK,KAAK,KAAK,GAAG;AAAA,IAC7C;AAEA,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,YAAY,GAAG;AACxB,SAAK,IAAI,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,KAAK,KAAK,CAAC;AAClD,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,QAAI,CAAC,GAAG;AAAW;AACnB,SAAK,KAAK,MAAM,QAAQ,CAAC,GAAG,UAAU;AAClC,WAAK,IAAI,KAAK;AACd,WAAK,IAAI,UAAU,CAAC,EAAE,GAAG,CAAC;AAC1B,WAAK,IAAI,eAAe,QAAQ,KAAK;AACrC,WAAK,IAAI,OAAO,EAAE,OAAO,KAAK,KAAK,GAAG;AACtC,WAAK,YAAY;AACjB,WAAK,IAAI,QAAQ;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EACA,aAAa;AACT,QAAI,KAAK,KAAK;AACd,QAAI,GAAG;AAA4B;AACnC,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,YAAY;AACrB,SAAK,IAAI,cAAc;AACvB,SAAK,IAAI,OAAO,EAAE,GAAG,WAAW,MAAM,GAAG,WAAW,GAAG,UAAU,MAAM,GAAG,WAAW,CAAC;AACtF,SAAK,IAAI,OAAQ,GAAG,WAAW,KAAM,GAAG,WAAW,GAAG,WAAW,GAAG,UAAU,GAAG,GAAG,WAAW,CAAC;AAChG,SAAK,IAAI,OAAO;AAChB,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,QAAI,IAAI,GAAG,WAAW,GAAG,UAAU,GAAG;AACtC,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AAAA,EACA,YAAY;AACR,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,gBAAgB,GAAG;AAC5B,SAAK,IAAI,aAAa,GAAG;AAAA,EAC7B;AAEJ;;;AC9MA,IAAMC,kBAA6C;AAAA,EAC/C,GAAG,cAAc;AAAA,EACjB,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AACV;AACA,IAAqB,MAArB,cAAiC,UAAsC;AAAA,EAGnE,YAAY,GAAW,GAAW,QAA2B,SAAqC,OAAyB;AACvH,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYA,iBAAgB,CAAC,CAAC;AACnC,SAAK,MAAM,IAAI,MAAM;AACrB,SAAK,IAAI,MAAM,KAAK,QAAQ;AAC5B,SAAK,OAAO;AAEZ,SAAK,IAAI,SAAS,MAAM;AACpB,WAAK,IAAI,KAAK,IAAI;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,OAAO;AACH,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,SAAS;AAAA,EAElB;AAAA,EACA,UAAU;AACN,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,QAAI,GAAG;AAAM,WAAK,IAAI,OAAO,KAAK,OAAO,KAAK,KAAK,GAAG;AACtD,SAAK,IAAI,UAAU,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO,GAAG,MAAM;AAC/E,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AACjB,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,WAAW;AACP,QAAI,KAAK,KAAK;AACd,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,UAAU;AACnB,QAAI,IAAI,GAAG,WAAW,GAAG,UAAU,GAAG,SAAS;AAC/C,SAAK,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC/B,SAAK,IAAI,UAAU;AACnB,SAAK,IAAI,QAAQ;AAAA,EACrB;AACJ;;;AC9CA,IAAMC,kBAAgD;AAAA,EACpD,GAAG,cAAc;AAAA,EACjB,eAAe;AAAA,EACf,wBAAwB;AAAA,EACxB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,aAAa;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AACX;AAKA,IAAqB,WAArB,cAAsC,UAAyC;AAAA,EAK7E,YACE,GACA,GACA,QACA,SACA,OACA;AACA,UAAM,GAAG,GAAG,QAAQ,SAAS,KAAK;AAElC,SAAK,YAAYA,iBAAgB,CAAC,CAAC;AACnC,SAAK,WAAW,CAAC;AACjB,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,WAAW,KAAK,MAAM,QAAQ,QAAQ;AAC3C,SAAK,IAAI,KAAK,IAAI;AAClB,YAAQ,IAAI,MAAM,OAAO;AAAA,EAC3B;AAAA,EACA,YAAY;AACV,QAAI,KAAK,KAAK;AAEd,SAAK,IAAI,UAAU,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC;AAC3C,SAAK,OAAO,QAAQ,KAAK,MAAM,QAAQ;AACvC,SAAK,OAAO,SAAS,KAAK,MAAM,QAAQ;AACxC,SAAK,IAAI,YAAY,GAAG;AAAA,EAC1B;AAAA,EACA,OAAO;AACL,SAAK,UAAU;AACf,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,WAAW,KAAqB;AAC9B,QAAI,KAAK,KAAK;AACd,aAAS,KAAK,MAAM,KAAK,GAAG,GAAG;AAC7B,UAAI,KAAK,MAAM,cAAc,EAAE;AAAI;AACnC,UAAI,GAAG,QAAQ,SAAS,KAAK,EAAE,aAAa,GAAG,OAAO,MAAM;AAAM;AAClE,UAAI,GAAG,MAAM;AACX,YAAI,EAAE,SAAS,UAAU,GAAG;AAC1B,eAAK,SAAS,KAAK,EAAE,OAAO,EAAE,UAAU,SAAS,EAAiB,CAAC;AAAA,QACrE;AAAO,eAAK,WAAW,EAAE,QAAQ;AAAA,MACnC,OAAO;AACL,aAAK,SAAS,KAAK,EAAE,OAAO,EAAE,UAAU,SAAS,EAAiB,CAAC;AAAA,MACrE;AAAA,IACF;AAAA,EACF;AAAA,EACA,eAAe;AACb,QAAI,KAAK,KAAK;AACd,QAAI,iBAAiB,KAAK,IAAI,qBAAqB,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;AACvE,mBAAe,aAAa,GAAG,GAAG,aAAa;AAC/C,mBAAe,aAAa,KAAK,WAAW,GAAG,sBAAsB;AACrE,mBAAe,aAAa,GAAG,GAAG,aAAa;AAC/C,QAAI,GAAG;AAAW,WAAK,IAAI,YAAY;AACvC,SAAK,SAAS,QAAQ,CAAC,MAAM;AAC3B,UAAI,KAAK,EAAE;AAEX,WAAK,eAAe,GAAG,YAAY,GAAG,WAAW,GAAG,aAAa,GAAG,cAAc,GAAG,MAAM;AAC3F,WAAK,IAAI,KAAK;AAAA,IAChB,CAAC;AACD,QAAI,GAAG,WAAW;AAChB,UAAI,KAAK,aAAa;AAAK,aAAK,QAAQ;AACxC,UAAI,KAAK,aAAa;AAAK,aAAK,QAAQ;AACxC,UAAI,KAAK,UAAU;AAAG,aAAK,aAAa;AACxC,UAAI,KAAK,UAAU;AAAG,aAAK,aAAa;AAAA,IAC1C;AAAA,EACF;AA2BF;;;ACzGA,IAAO,gBAAQ,EAAE,MAAM,MAAM,MAAM,MAAM,OAAO,SAAS,MAAM,KAAK,SAAS;;;ACP9D,SAAR,eACL,GACA,GACA,QACA,SACA,OACA;AACA,MAAI;AACF,QAAI,QAAQ;AACZ,QAAI,CAAC,QAAQ;AAAQ,cAAQ,IAAK,cAAO,QAAQ,OAAe,GAAG,GAAG,QAAQ,SAAS,MAAM,QAAQ,MAAM;AAAA;AACtG,cAAQ,IAAI,QAAQ,OAAO,GAAG,GAAG,QAAQ,SAAS,MAAM,QAAQ,MAAM;AAC3E,UAAM,QAAQ;AAAA,EAChB,SAAS,GAAP;AACA,SAAK,MAAM,gBAAgB,IAAI,GAAG;AAAA,EACpC;AACF;;;AClBA,IAAO,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACKf,IAAqB,aAArB,MAAgC;AAAA,EAW9B,YAAY,SAAsB,SAAuB,eAA6B;AAEpF,SAAK,UAAU,OAAO,OAAO,cAAc,GAAG,OAAO;AACrD,SAAK,gBAAgB;AACrB,SAAK,SAAS,SAAS,cAAc,QAAQ;AAC7C,SAAK,YAAY,OAAO,QAAQ,KAAK,IAAI,CAAC;AAC1C,SAAK,UAAU;AAEf,SAAK,UAAU;AACf,SAAK,KAAK;AAAA,EACZ;AAAA,EACA,SAAS;AACP,SAAK,OAAO,QAAQ,KAAK,QAAQ;AACjC,SAAK,OAAO,SAAS,KAAK,QAAQ;AAClC,SAAK,KAAK;AAAA,EACZ;AAAA,EACA,QAAQ;AAhCV;AAiCI,QAAI,KAAK,KAAK;AACd,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,QAAI,CAAC,GAAG,eAAe;AACrB,UAAI,GAAG;AAA4B,aAAK,QAAQ,MAAM,gBAAgB;AAAA;AACjE,iBAAS,KAAK,MAAM,gBAAgB;AAAA,IAC3C;AAEA,QAAI,GAAG;AAA4B,iBAAK,kBAAL,mBAAoB;AACvD,QAAI,KAAK,QAAQ,QAAQ;AAEvB,WAAK,QAAQ,OAAO,QAAQ;AAE5B,WAAK,QAAQ,OAAO,SAAS,YAAY;AAAA,IAC3C;AAEA,eAAW,MAAM;AAjDrB,UAAAC,KAAA;AAmDM,WAAIA,MAAA,KAAK,QAAQ,WAAb,gBAAAA,IAAqB;AAAa,6BAAoB,UAAK,QAAQ,WAAb,mBAAqB,WAAW;AAE1F,UAAI,GAAG;AAA4B,mBAAK,kBAAL,mBAAoB,aAAa;AAAA;AAC/D,aAAK,OAAO,OAAO;AAExB,WAAI,UAAK,QAAQ,WAAb,mBAAqB;AAAU,aAAK,QAAQ,OAAO,SAAS,OAAO;AAAA,IACzE,GAAG,GAAG,UAAU;AAAA,EAClB;AAAA,EAEQ,OAAO;AAEb,SAAK,UAAU;AAEf,SAAK,KAAK;AAAA,EACZ;AAAA,EACQ,aAAa;AAEnB,SAAK,OAAO,MAAM,UAAU;AAC5B,SAAK,OAAO,MAAM,SAAS;AAAA,EAC7B;AAAA,EACQ,YAAY;AAClB,QAAI,KAAK,KAAK;AAEd,QAAI,WAAW,KAAK,QAAQ,aAC1B,WAAW,KAAK,QAAQ,cACxB,mBAAmB,OAAO,iBAAiB,KAAK,OAAO,GACvD,eAAe,KAAK,QAAQ,OAC5B,cAAc,KAAK,OAAO;AAE5B,SAAK,QAAQ,YAAY,KAAK;AAC9B,QAAI,CAAC,GAAG,eAAe;AACrB,UAAI,GAAG;AAA4B,aAAK,QAAQ,MAAM,gBAAgB;AAAA;AACjE,iBAAS,KAAK,MAAM,gBAAgB;AAAA,IAC3C;AACA,QAAI,CAAC,iBAAiB,YAAY,iBAAiB,aAAa;AAAU,mBAAa,WAAW;AAElG,SAAK,OAAO,KAAK,KAAK;AACtB,aAAS,YAAY,GAAG,WAAW,aAAK;AACxC,SAAK,OAAO,MAAM,YAAY,WAAW,GAAG,aAAa;AACzD,gBAAY,WAAW;AACvB,gBAAY,OAAO,GAAG,GAAG,gBAAgB,IAAI,KAAK,QAAQ;AAC1D,gBAAY,MAAM,GAAG,GAAG,gBAAgB,IAAI,KAAK,QAAQ;AACzD,gBAAY,SAAS,GAAG;AACxB,gBAAY,aAAa,GAAG,GAAG,aAAa;AAC5C,gBAAY,kBAAkB,GAAG;AACjC,gBAAY,eAAe,iBAAiB;AAE5C,SAAK,OAAO,QAAQ;AACpB,SAAK,OAAO,SAAS;AAErB,SAAK,QAAQ,OAAO,KAAK,MAAM;AAAA,EACjC;AAAA,EACQ,OAAO;AACb,QAAI,IAAI,KAAK,OAAO,aAClB,IAAI,KAAK,OAAO;AAClB,QAAI,KAAK,QAAQ,QAAQ;AACvB,qBAAe,GAAG,GAAG,KAAK,QAAQ,KAAK,SAAS,KAAK,QAAQ,MAAM;AAAA,IACrE,OAAO;AACL,WAAK,MAAM,+BAA+B;AAAA,IAC5C;AAAA,EACF;AAAA,EACQ,YAAY;AAElB,SAAK,QAAQ,SAAS;AAAA,MACpB,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,aAAa;AAAA,MACb,WAAW,KAAK;AAAA,MAChB,OAAO;AAAA,MACP,UAAU;AAAA,QACR,aAAa,MAAM;AAAA,QAAC;AAAA,QACpB,QAAQ,MAAM;AAAA,QAAC;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACF;;;AC3He,SAAR,QAAyB,KAAkB,SAAuB;AAEvE,MAAI,aAAa,IAAI,WAAW,KAAK,OAAO;AAC5C,QAAM,SAAS,MAAM;AACnB,eAAW,OAAO;AAAA,EACpB;AACA,QAAM,SAAS,CAACC,aAA0B;AAExC,QAAI,KAAK,OAAO,OAAO,WAAW,SAASA,QAAO;AAElD,QAAI,CAAC,WAAW,WAAW;AACzB,UAAI,GAAG,0BAA4B;AACjC,aAAK,OAAO,OAAO,EAAE;AAAA,MACvB;AACA,mBAAa,IAAI,WAAW,KAAK,EAAE;AAAA,IACrC;AAAA,EACF;AACA,QAAM,QAAQ,MAAM;AAClB,eAAW,MAAM;AAAA,EACnB;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
  "names": ["limits", "defaultOptions", "limits", "defaultOptions", "limits", "defaultOptions", "limits", "defaultOptions", "limits", "defaultOptions", "limits", "defaultOptions", "limits", "defaultOptions", "defaultOptions", "_a", "options"]
}
